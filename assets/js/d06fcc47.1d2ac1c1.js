"use strict";(self.webpackChunkcodingdocs=self.webpackChunkcodingdocs||[]).push([[41],{3905:(e,n,t)=>{t.d(n,{Zo:()=>k,kt:()=>o});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),m=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},k=function(e){var n=m(e.components);return a.createElement(s.Provider,{value:n},e.children)},N="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),N=m(t),d=r,o=N["".concat(s,".").concat(d)]||N[d]||u[d]||l;return t?a.createElement(o,i(i({ref:n},k),{},{components:t})):a.createElement(o,i({ref:n},k))}));function o(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var p={};for(var s in n)hasOwnProperty.call(n,s)&&(p[s]=n[s]);p.originalType=e,p[N]="string"==typeof e?e:r,i[1]=p;for(var m=2;m<l;m++)i[m]=t[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},60789:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>k,contentTitle:()=>s,default:()=>c,frontMatter:()=>p,metadata:()=>m,toc:()=>N});t(67294);var a=t(3905);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const p={hide_title:!0,sidebar_position:4,sidebar_label:"Vorlesung",tags:["linguae","sql","SQL","aufgaben","nordwind"]},s=void 0,m={unversionedId:"Aufgaben/Vorlesung/index",id:"Aufgaben/Vorlesung/index",title:"index",description:"# Vorlesung",source:"@site/docs/sql/Aufgaben/Vorlesung/index.mdx",sourceDirName:"Aufgaben/Vorlesung",slug:"/Aufgaben/Vorlesung/",permalink:"/sql/Aufgaben/Vorlesung/",draft:!1,editUrl:"https://p76ers.github.io/docs/sql/Aufgaben/Vorlesung/index.mdx",tags:[{label:"linguae",permalink:"/sql/tags/linguae"},{label:"sql",permalink:"/sql/tags/sql"},{label:"aufgaben",permalink:"/sql/tags/aufgaben"},{label:"nordwind",permalink:"/sql/tags/nordwind"}],version:"current",lastUpdatedAt:1701103726,formattedLastUpdatedAt:"Nov 27, 2023",sidebarPosition:4,frontMatter:{hide_title:!0,sidebar_position:4,sidebar_label:"Vorlesung",tags:["linguae","sql","SQL","aufgaben","nordwind"]},sidebar:"tutorialSidebar",previous:{title:"3)",permalink:"/sql/Aufgaben/3"}},k={},N=[{value:"22.11",id:"2211",level:2},{value:"23.11",id:"2311",level:2},{value:"24.11",id:"2411",level:2},{value:"27.11",id:"2711",level:2}],u=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",n)},d=u("CardHeading"),o=u("CardChapter"),g={toc:N},E="wrapper";function c(e){var{components:n}=e,t=i(e,["components"]);return(0,a.kt)(E,l(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){r(e,n,t[n])}))}return e}({},g,t),{components:n,mdxType:"MDXLayout"}),(0,a.kt)(d,{mdxType:"CardHeading"},(0,a.kt)("h1",{id:"vorlesung"},"Vorlesung")),(0,a.kt)("hr",null),(0,a.kt)(o,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"2211"},"22.11"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Anzahl aller Artikel per Aggregatfunktion bestimmen"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT COUNT(*) \nFROM artikel;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Anzahl aller Artikel per Aggregatfunktion bestimmen und Spaltennamen anpassen"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT COUNT(*) as "Anzahl Artikel" \nFROM artikel;\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Anzahl aller Artikel und Email-Adressen bestimmen, Kombination von Aggregatfunktionen"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT count(*) as Anzahl, \n    count(email) as Email \nFROM kunden;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Aggregatfunktionen f\xfcr alphabetisch kleinsten und gr\xf6\xdften ",(0,a.kt)("inlineCode",{parentName:"p"},"Ort")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT max(Ort), \n    min(Ort) \nFROM kunden;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Anzeige nur von bestimmten Spalten und Bedingungen (Nur Kunden aus Frankreich)"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT Firma, Ort, Land \nFROM kunden \nWHERE Land="frankreich";\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Verkn\xfcpfung von Bedingungen (Alle Kunden aus Deutschland ",(0,a.kt)("u",null,(0,a.kt)("strong",{parentName:"p"},"und"))," Frankreich)"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT Firma, Ort, Land \nFROM kunden \nWHERE Land="frankreich" \n    OR Land="deutschland";\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Verkn\xfcpfung von Bedingungen (Alle Kunden aus M\xfcnster ",(0,a.kt)("u",null,(0,a.kt)("strong",{parentName:"p"},"und"))," Berlin)"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT Firma, Ort, Land \nFROM kunden \nWHERE Ort in("m\xfcnster", "berlin");\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Sortieren nach 1. Land absteigend und 2. nach Firma"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT Firma, Ort, Land\nFROM kunden \nWHERE Land in("Frankreich", "deutschland", "usa") \nORDER BY Land DESC, Firma;\n')),(0,a.kt)("p",{parentName:"li"},"alternativ mit Angabe der Spaltennummer statt Spaltennamen"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT Firma, Ort, Land\nFROM kunden \nWHERE Land in("Frankreich", "deutschland", "usa") \nORDER BY 3 DESC, 1;\n'))))),(0,a.kt)("br",null),(0,a.kt)(o,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"2311"},"23.11"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Alle Spalten anzeigen, sortieren nach ",(0,a.kt)("inlineCode",{parentName:"p"},"Einzelpreis")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * \nFROM artikel \nORDER BY Einzelpreis;\n")),(0,a.kt)("p",{parentName:"li"},"absteigende Sortierung:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * \nFROM artikel \nORDER BY Einzelpreis DESC;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Die 5 teuersten Artikel anzeigen"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * \nFROM artikel \nORDER BY Einzelpreis DESC LIMIT 5;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Alle Artikel, deren ",(0,a.kt)("inlineCode",{parentName:"p"},"Einzelpreis")," \xfcber 20\u20ac liegt, absteigend sortieren"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT * FROM artikel \nWHERE Einzelpreis >= 20\nORDER BY Einzelpreis DESC;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Alle Artikel, deren ",(0,a.kt)("inlineCode",{parentName:"p"},"Einzelpreis")," zwischen 20\u20ac ",(0,a.kt)("u",null,(0,a.kt)("strong",{parentName:"p"},"und"))," 50\u20ac liegt, absteigend sortieren"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Artikelname, Einzelpreis\nFROM artikel \nWHERE Einzelpreis >= 20\n    AND Einzelpreis <= 50\nORDER by Einzelpreis DESC;\n")),(0,a.kt)("p",{parentName:"li"},"alternativ:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Artikelname, Einzelpreis\nFROM artikel \nWHERE Einzelpreis BETWEEN 20 AND 50\nORDER by Einzelpreis DESC;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Summe aller Kunden aus ",(0,a.kt)("inlineCode",{parentName:"p"},"USA"),", f\xfcr die ",(0,a.kt)("u",null,(0,a.kt)("strong",{parentName:"p"},"auch"))," eine Email hinterlegt ist"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT COUNT(*) "Kunden aus USA", \n    COUNT(email) "mit Mail" \nFROM kunden \nWHERE Land ="USA";\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Alle Artikel (Tabelle ",(0,a.kt)("inlineCode",{parentName:"p"},"artikel"),") mit den Lieferern (Tabelle ",(0,a.kt)("inlineCode",{parentName:"p"},"lieferanten"),") mit ",(0,a.kt)("inlineCode",{parentName:"p"},"Equi-JOIN")," anzeigen"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Artikelname, Einzelpreis, Lagerbestand, Firma\nFROM artikel, lieferanten\nWHERE LieferantenID = lieferantenNr;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Ausgabe aller Firmen (",(0,a.kt)("inlineCode",{parentName:"p"},"kunden"),"), die \u201cMilchprodukte\u201d (",(0,a.kt)("inlineCode",{parentName:"p"},"artikelkategorien"),") verkaufen "),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT firma, artikelname, kategoriename\nFROM artikelkategorien, artikel, bestellungendetails, bestellungen, kunden\nWHERE KategorieId = KategorieNr\n    AND ArtikelId = ArtikelNr\n    AND Bestellnr = BestellId\n    AND KundenNr = KundenId\n    AND Kategoriename LIKE "%milch%"\nORDER BY 1;\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},'Ausgabe aller verkauften Artikel f\xfcr "Blauer See Delikatessen" (',(0,a.kt)("inlineCode",{parentName:"p"},"kunden"),") "),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT Artikelname, Firma\nFROM artikel, bestellungendetails, bestellungen, kunden\nWHERE ArtikelId = ArtikelNr\n    AND BestellNr = BestellId\n    AND KundenNr = KundenId\n    AND Firma LIKE "%blau%";\n'))))),(0,a.kt)("br",null),(0,a.kt)(o,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"2411"},"24.11"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Anzeige aller Bestellungen f\xfcr Kunden in Berlin mit ",(0,a.kt)("inlineCode",{parentName:"p"},"EQUI_JOIN")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT KundenId, Firma, Ort, BestellId \nFROM kunden, bestellungen\nWHERE KundenId = KundenNr\n    AND Ort="Berlin";\n')),(0,a.kt)("p",{parentName:"li"},"alternativ mit ",(0,a.kt)("inlineCode",{parentName:"p"},"INNER JOIN")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT KundenId, Firma, Ort, BestellId \nFROM kunden INNER JOIN bestellungen ON KundenId = KundenNr\n    AND Ort="Berlin";\n')),(0,a.kt)("p",{parentName:"li"},"Anzeige ",(0,a.kt)("u",null,(0,a.kt)("strong",{parentName:"p"},"aller"))," Datenfelder mit ",(0,a.kt)("inlineCode",{parentName:"p"},"LEFT JOIN "),"(Nicht nur die Schnittmenge)"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT KundenId, Firma, Ort, BestellId \nFROM Kunden LEFT JOIN Bestellungen ON KundenId = KundenNr\n    AND Ort="Berlin";\n')),(0,a.kt)("p",{parentName:"li"},"Anzeige von einigen Kunden, Bedingungen nach ",(0,a.kt)("inlineCode",{parentName:"p"},"KundenId")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT KundenId, Firma, Ort, BestellId \nFROM Kunden LEFT JOIN Bestellungen ON KundenId = KundenNr\nWHERE KundenID IN(1,22,23,57,58);\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Anzeige aller Bestellnummern (",(0,a.kt)("inlineCode",{parentName:"p"},"bestellungendetails"),") zu allen Artikeln (",(0,a.kt)("inlineCode",{parentName:"p"},"artikel"),")"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT ArtikelId, Artikelname, BestellNr\nFROM artikel INNER JOIN bestellungendetails ON ArtikelId = ArtikelNr;\n")),(0,a.kt)("p",{parentName:"li"},"Anzeige ",(0,a.kt)("u",null,(0,a.kt)("strong",{parentName:"p"},"aller"))," Datenfelder mit ",(0,a.kt)("inlineCode",{parentName:"p"},"LEFT JOIN "),"(Nicht nur die Schnittmenge)\nnach Anlegen eines neuen Artikels"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT ArtikelId, Artikelname, BestellNr\nFROM artikel LEFT JOIN bestellungendetails ON ArtikelId = ArtikelNr\nORDER BY 3;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Verkn\xfcpfung von mehreren Tabellen in Kombination mit ",(0,a.kt)("inlineCode",{parentName:"p"},"LEFT JOIN")," und ",(0,a.kt)("inlineCode",{parentName:"p"},"INNER JOIN")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT ArtikelID, Artikelname, Bestellnr \nFROM (((artikel \n        LEFT JOIN bestellungendetails ON ArtikelId = ArtikelNr)\n        Inner JOIN bestellungen ON BestellId = BestellNr)\n        INNER JOIN kunden on KundenID = KundenNr)\nWHERE Artikelname ="Gravad lax";\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"In welche Orte (",(0,a.kt)("inlineCode",{parentName:"p"},"kunden"),') wurde "Gravad Lax" verkauft'),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT ArtikelID, Artikelname, Firma, Ort \nFROM artikel \n    INNER JOIN bestellungendetails on ArtikelId = ArtikelNr\n    INNER JOIN bestellungen on BestellId = BestellNr\n    INNER JOIN kunden on KundenId = KundenNr\nWHERE Artikelname ="Gravad lax";\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Auflistung aller Gew\xfcrze und Kunden"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT ArtikelID, Artikelname, Firma, Ort, Kategoriename \nFROM artikel \n    INNER JOIN artikelkategorien on KategorieNr = kategorieId\n    INNER JOIN bestellungendetails on ArtikelId = ArtikelNr\n    INNER JOIN bestellungen on BestellId = BestellNr\n    INNER JOIN kunden on KundenId = KundenNr\nWHERE Kategoriename LIKE "%rze%";\n')),(0,a.kt)("p",{parentName:"li"},"Liste verk\xfcrzen und sortiert nach Firma"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'  SELECT DISTINCT ArtikelID, Artikelname, Firma, Ort, Kategoriename \n  FROM artikel \n      INNER JOIN artikelkategorien on KategorieNr = kategorieId\n      INNER JOIN bestellungendetails on ArtikelId = ArtikelNr\n      INNER JOIN bestellungen on BestellId = BestellNr\n      INNER JOIN kunden on KundenId = KundenNr\n  WHERE Kategoriename LIKE "%rze%"\n  ORDER by 1;\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Gesamtsumme aller verkauften Artikel"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT sum(Anzahl * Einzelpreis) \nFROM bestellungendetails INNER JOIN artikel\nWHERE ArtikelNr = ArtikelId;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Gesamtsumme aller Ums\xe4tze pro Artikel mit Aggregatfunktion"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Artikelname, \n  sum(Anzahl * Einzelpreis) \nFROM bestellungendetails INNER JOIN artikel\nWHERE ArtikelNr = ArtikelId\nGROUP BY Artikelname;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Ausgabe der verkauften Mengen und des jeweiligen Umsatzes je Artikel\ndurch Kombination von Aggregatfunktionen"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT Artikelname, Einzelpreis, \n    sum(Anzahl) "Verkaufsmenge",\n    sum(Anzahl*einzelpreis) "Umsatz"\nFROM bestellungendetails INNER JOIN artikel\nWHERE ArtikelNr = ArtikelId\nGROUP BY Artikelname, Einzelpreis\nORDER BY 3 DESC;\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Gesamtumsatz je Kategorie"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT Kategoriename,\n    sum(Anzahl * Einzelpreis) "Umsatz je Kategorie"\nFROM bestellungendetails\n    INNER JOIN Artikel ON ArtikelNr = ArtikelId\n    INNER JOIN artikelkategorien ON KategorieId = KategorieNr\nGROUP BY  Kategoriename\nORDER BY 2;\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Gesamtumsatz je Bestellung"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT Bestellnr,\n    sum(Anzahl * Einzelpreis) "Umsatz je Bestellung"\nFROM bestellungendetails\n    INNER JOIN artikel on ArtikelNr = ArtikelId\nGROUP BY  BestellNr\nORDER BY 1;\n'))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"einzelne ums\xe4tze f\xfcr tofu"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT BestellNr, Artikelname,\n    sum(Anzahl * Einzelpreis) "Umsatz f\xfcr Tofu je Bestellung"\nFROM bestellungendetails\n    INNER JOIN artikel ON ArtikelNr = ArtikelId\nWHERE Artikelname LIKE "%tofu%"\nGROUP BY  BestellNr, Artikelname\nORDER By 1;\n'))))),(0,a.kt)("br",null),(0,a.kt)(o,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"2711"},"27.11"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Ums\xe4tze pro Artikel anzeigen"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT sum(Anzahl * Einzelpreis), Artikelname\nFROM artikel, bestellungendetails \nWHERE ArtikelID = ArtikelNR\nGROUP BY Artikelname\nORDER BY 1 DESC;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Bedingungen f\xfcr Aggregatfunktion mit ",(0,a.kt)("inlineCode",{parentName:"p"},"HAVING")),(0,a.kt)("p",{parentName:"li"},"Nur Ums\xe4tze f\xfcr Artikel anzeigen, die \xfcber 10000 liegen "),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT sum(Anzahl * Einzelpreis), \n    Artikelname\nFROM artikel, bestellungendetails \nWHERE ArtikelID = ArtikelNR\nGROUP BY Artikelname\nHAVING sum(Anzahl * Einzelpreis) > 10000\nORDER BY 1 DESC;\n")),(0,a.kt)("p",{parentName:"li"},"alternativ"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT sum(Anzahl * Einzelpreis) Umsatz, \n    Artikelname\nFROM artikel, bestellungendetails \nWHERE ArtikelID = ArtikelNR\nGROUP BY Artikelname\nHAVING sum(Anzahl * Einzelpreis) > 10000\nORDER BY 1 DESC;\n")),(0,a.kt)("p",{parentName:"li"},"alternativ"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT sum(Anzahl * Einzelpreis) Umsatz, \n    Artikelname\nFROM artikel, bestellungendetails \nWHERE ArtikelID = ArtikelNR\nGROUP BY Artikelname\nHAVING sum(Anzahl * Einzelpreis) > 10000\nORDER BY Umsatz DESC;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Ums\xe4tze f\xfcr alle Kunden, die mindestens 10000\u20ac haben (Bedingung mit Aggregatfunktion)"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT sum(Anzahl * Einzelpreis) Umsatz, \n    Firma\nFROM artikel, bestellungendetails, bestellungen, kunden \nWHERE ArtikelID = ArtikelNR\n    AND BestellNr = BestellId\n    AND KundenNr = KundenId\nGROUP BY Firma\nHAVING sum(Anzahl * Einzelpreis) > 10000\nORDER BY Umsatz;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Anzeige  billigster Artikel"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Artikelname, Einzelpreis\nFROM artikel\nORDER BY 2\nLIMIT 1;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Anzeige teuerster Artikel"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Artikelname, Einzelpreis\nFROM artikel\nORDER BY 2 DESC\nLIMIT 1;\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Anzeige teuerster und billigster Artikel (ohne Artikelname)"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT min(Einzelpreis) Billigster,\n    max(Einzelpreis) Teuerster\nFROM artikel\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"teuerster und billigster Artikel mit SUB-SELECT "),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"SELECT Artikelname, Einzelpreis\nFROM artikel\nWHERE Einzelpreis = \n        (SELECT min(Einzelpreis) FROM artikel)\n    OR \n      Einzelpreis =\n        (SELECT max(Einzelpreis) FROM artikel);\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Anzeige billigste und teuerste Gew\xfcrz"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT Artikelname, KategorieNr, Einzelpreis\nFROM artikel\nWHERE KategorieNr = \n    (SELECT KategorieId FROM artikelkategorien WHERE Kategoriename = "gew\xfcrze")\nAND \n    (\n      Einzelpreis = (\n      SELECT min(Einzelpreis) \n      FROM artikel \n      WHERE KategorieNr = (\n          SELECT KategorieId \n          FROM artikelkategorien \n          WHERE Kategoriename ="gew\xfcrze"))\nOR \n    Einzelpreis = (\n      SELECT max(Einzelpreis) \n      FROM artikel \n      WHERE KategorieNr = (\n          SELECT KategorieId \n          FROM artikelkategorien \n          WHERE Kategoriename ="gew\xfcrze"))\n    )\nORDER BY Einzelpreis;\n')),(0,a.kt)("p",{parentName:"li"},"alternativ"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-sql"},'SELECT Artikelname, KategorieNr, Einzelpreis\nFROM artikel\n  INNER JOIN artikelkategorien ON KategorieNr = KategorieID\nWHERE Kategoriename = "Gew\xfcrze"\n  AND \n    Einzelpreis IN \n    (\n      (SELECT min(Einzelpreis) \n        FROM artikel \n        WHERE KategorieNr = \n          (SELECT KategorieID \n            FROM artikelkategorien \n            WHERE Kategoriename ="gew\xfcrze")), \n      (SELECT max(Einzelpreis) \n        FROM artikel \n        WHERE KategorieNr = \n          (SELECT KategorieID \n            FROM artikelkategorien \n            WHERE Kategoriename ="gew\xfcrze"))\n    )\nORDER BY Einzelpreis;\n'))))),(0,a.kt)("br",null))}c.isMDXComponent=!0}}]);