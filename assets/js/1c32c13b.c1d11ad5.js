"use strict";(self.webpackChunkcodingdocs=self.webpackChunkcodingdocs||[]).push([[2497],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),o=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=o(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=o(t),g=r,m=d["".concat(s,".").concat(g)]||d[g]||h[g]||i;return t?a.createElement(m,l(l({ref:n},c),{},{components:t})):a.createElement(m,l({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=g;var u={};for(var s in n)hasOwnProperty.call(n,s)&&(u[s]=n[s]);u.originalType=e,u[d]="string"==typeof e?e:r,l[1]=u;for(var o=2;o<i;o++)l[o]=t[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},43023:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>b,frontMatter:()=>u,metadata:()=>o,toc:()=>d});t(67294);var a=t(3905);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}const u={hide_title:!0,sidebar_position:1,sidebar_label:8.6,tags:["linguae","cpp","c++","cplusplus","aufgaben"]},s=void 0,o={unversionedId:"Aufgaben/8.6",id:"Aufgaben/8.6",title:"8.6",description:"## 1",source:"@site/docs/cpp/Aufgaben/8.6.mdx",sourceDirName:"Aufgaben",slug:"/Aufgaben/8.6",permalink:"/cpp/Aufgaben/8.6",draft:!1,editUrl:"https://p76ers.github.io/docs/cpp/Aufgaben/8.6.mdx",tags:[{label:"linguae",permalink:"/cpp/tags/linguae"},{label:"cpp",permalink:"/cpp/tags/cpp"},{label:"c++",permalink:"/cpp/tags/c"},{label:"cplusplus",permalink:"/cpp/tags/cplusplus"},{label:"aufgaben",permalink:"/cpp/tags/aufgaben"}],version:"current",lastUpdatedAt:1699726522,formattedLastUpdatedAt:"Nov 11, 2023",sidebarPosition:1,frontMatter:{hide_title:!0,sidebar_position:1,sidebar_label:"8.6",tags:["linguae","cpp","c++","cplusplus","aufgaben"]},sidebar:"tutorialSidebar",previous:{title:"Boolean",permalink:"/cpp/datatypes/boolean"},next:{title:"13.1",permalink:"/cpp/Aufgaben/13.1"}},c={},d=[{value:"1",id:"1",level:2},{value:"2",id:"2",level:2},{value:"3",id:"3",level:2},{value:"4",id:"4",level:2},{value:"5",id:"5",level:2},{value:"6",id:"6",level:2},{value:"7",id:"7",level:2},{value:"8",id:"8",level:2},{value:"9",id:"9",level:2},{value:"10 - check",id:"10---check",level:2},{value:"11",id:"11",level:2},{value:"12",id:"12",level:2},{value:"13",id:"13",level:2},{value:"14",id:"14",level:2},{value:"15",id:"15",level:2},{value:"16",id:"16",level:2},{value:"17 - 2Do",id:"17---2do",level:2}],h=(g="CardChapter",function(e){return console.warn("Component "+g+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.kt)("div",e)});var g;const m={toc:d},p="wrapper";function b(e){var{components:n}=e,u=l(e,["components"]);return(0,a.kt)(p,i(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},a=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),a.forEach((function(n){r(e,n,t[n])}))}return e}({},m,u),{components:n,mdxType:"MDXLayout"}),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"1"},"1"),(0,a.kt)("p",null,"  Der Satz des Pythagoras lautet ",(0,a.kt)("inlineCode",{parentName:"p"},"a\xb2 + b\xb2 = c\xb2"),". Erstellen Sie ein Programm zur Berechnung der Seite C nach Eingabe der Werte f\xfcr a und b. F\xfcr die Wurzelberechnung k\xf6nnen Sie die Funktion ",(0,a.kt)("inlineCode",{parentName:"p"},"sqrt()")," benutzen."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"alt",src:t(82043).Z,width:"1177",height:"674"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <cmath>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  float a = 0;\n  float b = 0;\n  float c = 0;\n\n  cout << "Bitte Seite a eingeben: " << endl;\n  cin >> a;\n\n  do\n  {\n    cout << "Bitte positive Werte fuer Seite a eingeben: " << endl;\n    cin >> a;\n  } while (a < 0);\n\n  cout << "Bitte Seite b eingeben: " << endl;\n  cin >> b;\n\n  do\n  {\n    cout << "Bitte positive Werte fuer Seite b eingeben: " << endl;\n    cin >> b;\n  } while (b < 0);\n\n  c = sqrt(a * a + b * b);\n\n  cout << "Fuer a = " << a << " und b = " << b << endl;\n  cout << "Betraegt c = " << c << endl;\n\n  return 0;\n}\n\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"2"},"2"),(0,a.kt)("p",null,"  Fr\xfcher wurde das Normalgewicht berechnet aus der K\xf6rpergr\xf6\xdfe in Zentimetern - 100, das dazugeh\xf6rige Idealgewicht lag bei M\xe4nnern 10% darunter, bei Frauen minus 15%."),(0,a.kt)("p",null,"Erstellen Sie ein Programm, das Gr\xf6\xdfe und Geschlecht (",(0,a.kt)("inlineCode",{parentName:"p"},"m"),"/",(0,a.kt)("inlineCode",{parentName:"p"},"w"),") abfragt und dann Normal- und Ideal-gewicht ausgibt."),(0,a.kt)("p",null,'Erweiterung: Lassen Sie das tats\xe4chliche Gewicht eingeben und geben Sie die Abweichung vom Normal- und Idealgewicht aus, ggf. mit entsprechenden Bewertung "Sie haben \xdcber-/Untergewicht."'),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  float groesse = 0;\n  char geschlecht = \' \';\n  float idealGewicht = 0;\n  float normalGewicht = 0;\n  float gewicht = 0;\n\n  cout << "Bitte Koerpergroesse in cm eingeben: " << endl;\n  cin >> groesse;\n\n  do\n  {\n    cout << "Bitte geben Sie Ihr Geschlecht an (w/m) : " << endl;\n    cin >> geschlecht;\n  } while (geschlecht != \'w\' && geschlecht != \'m\');\n\n  cout << "Bitte geben Sie Ihr Gewicht ein: " << endl;\n  cin >> gewicht;\n\n  normalGewicht = groesse - 100;\n\n  if (geschlecht == \'w\')\n  {\n    idealGewicht = normalGewicht * 0.85;\n  }\n  else\n  {\n    idealGewicht = normalGewicht * 0.9;\n  }\n\n  cout << "Ihr Normalgewicht betraegt : " << normalGewicht << endl;\n  cout << "Ihr Idealgewicht betraegt : " << idealGewicht << endl;\n  if (gewicht < idealGewicht)\n  {\n    cout << "Sie haben Untergewicht!" << endl;\n  }\n  else\n  {\n    cout << "Sie haben Uebergewicht!" << endl;\n  }\n\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"3"},"3"),(0,a.kt)("p",null,"  Eingabe: St\xfcckzahl und Einzelpreis."),(0,a.kt)("p",null,"Bei mehr als 10 St\xfcck gibt es 5 % Rabatt, bei mehr als 50 St\xfcck gibt es 10 % Rabatt."),(0,a.kt)("p",null,"Ausgabe: Gesamtpreis."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  int menge = 0;\n  float einzelPreis = 0;\n  float gesamtPreis = 0;\n  int rabatt1 = 5;\n  int rabatt2 = 10;\n\n  cout << "Bitte geben Sie die Stueckzahl ein: " << endl;\n  cin >> menge;\n\n  cout << "Bitte geben Sie den Einzelpreis an: " << endl;\n  cin >> einzelPreis;\n\n  if (menge > 50)\n  {\n    gesamtPreis = menge * (einzelPreis + (einzelPreis * rabatt1 / 100));\n  }\n  else if (menge > 10)\n  {\n    gesamtPreis = menge * (einzelPreis + (einzelPreis * rabatt2 / 100));\n  }\n  else\n  {\n    gesamtPreis = menge * einzelPreis;\n  }\n\n  cout << "Der Gesamtpreis betraegt: " << gesamtPreis << endl;\n\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"4"},"4"),(0,a.kt)("p",null,"  Schreiben Sie ein Programm, welches eine Note (1 bis 6) in Ziffern einliest und anschlie\xdfend die Note in Worten (\u2019sehr gut\u2019, \u2019gut\u2019 usw.) ausgibt. Wenn eine ung\xfcltige Ziffer (>6 oder <1) eingegeben wurde, erscheint eine Fehlermeldung."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  int note = 0;\n\n  cout << "Bitte Note eingeben: " << endl;\n  cin >> note;\n\n  while (note < 0 || note > 6)\n  {\n    cout << "Bitte geben Sie eine Note zwischen 1-6 an: " << endl;\n    cin >> note;\n  }\n\n  switch (note)\n  {\n  case 1:\n    cout << "Ihr Note ist sehr gut! " << endl;\n    break;\n  case 2:\n    cout << "Ihr Note ist gut! " << endl;\n    break;\n  case 3:\n    cout << "Ihr Note ist befriedigend! " << endl;\n    break;\n  case 4:\n    cout << "Ihr Note ist ausreichend! " << endl;\n    break;\n  case 5:\n    cout << "Ihr Note ist mangelhaft! " << endl;\n    break;\n  default:\n    cout << "Ihr Note ist ungenuegend! " << endl;\n    break;\n  }\n\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"5"},"5"),(0,a.kt)("p",null,"F\xfcr einen einfachen Taschenrechner soll es 3 (drei!) einzelne Eingaben geben:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Zahl1"),(0,a.kt)("li",{parentName:"ul"},"Operator ",(0,a.kt)("inlineCode",{parentName:"li"},"+"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"-"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"*"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"/")),(0,a.kt)("li",{parentName:"ul"},"Zahl2")),(0,a.kt)("p",null,"Das Programm soll dann anhand des Operators die richtige Berechnung durchf\xfchren und das Ergebnis auf dem Bildschirm ausgeben."),(0,a.kt)("p",null,"Achtung: Eine Division durch ",(0,a.kt)("inlineCode",{parentName:"p"},"0")," ist nicht erlaubt und ist mit einer Fehlermeldung zu quittieren, es darf dann kein Ergebnis ausgegeben werden."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  float zahl1 = 0.0;\n  float zahl2 = 0.0;\n  char operat = \' \';\n  float ergebnis = 0.0;\n\n  cout << "Bitte Zahl1 eingeben: " << endl;\n  cin >> zahl1;\n\n  do\n  {\n    cout << "Bitte Operator eingeben: " << endl;\n    cin >> operat;\n  } while (operat != \'+\' && operat != \'-\' && operat != \'*\' && operat != \'/\');\n\n  do\n  {\n    cout << "Bitte Zahl2 eingeben: " << endl;\n    cin >> zahl2;\n    if (operat == \'/\' && zahl2 == 0)\n    {\n      cout << "Division durch 0 nicht moeglich!" << endl;\n    }\n  } while (operat == \'/\' && zahl2 == 0);\n\n  switch (operat)\n  {\n  case \'+\':\n    ergebnis = zahl1 + zahl2;\n    cout << zahl1 << " + " << zahl2 << " = " << ergebnis << endl;\n    break;\n  case \'-\':\n    ergebnis = zahl1 - zahl2;\n    cout << zahl1 << " - " << zahl2 << " = " << ergebnis << endl;\n    break;\n  case \'*\':\n    ergebnis = zahl1 * zahl2;\n    cout << zahl1 << " * " << zahl2 << " = " << ergebnis << endl;\n    break;\n  default:\n    ergebnis = zahl1 / zahl2;\n    cout << zahl1 << " / " << zahl2 << " = " << ergebnis << endl;\n    break;\n  }\n\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"6"},"6"),(0,a.kt)("p",null,"Es werden 3 Zahlen per Tastatur eingeben, der Computer gibt anschlie\xdfend die gr\xf6\xdfte Zahl wieder aus."),(0,a.kt)("p",null,"Erweiterung: Auch die kleinste eingegebene Zahl wird ausgegeben."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  float eingabe = 0;\n  float min = 0;\n  float max = 0;\n\n  for (int i = 1; i <= 3; i++)\n  {\n    cout << "Bitte Zahl" << i << " eingeben:" << endl;\n    cin >> eingabe;\n\n    if (i == 1)\n    {\n      max = min = eingabe;\n    }\n    else if (eingabe < min)\n    {\n      min = eingabe;\n    }\n    else if (eingabe > max)\n    {\n      max = eingabe;\n    }\n  }\n\n  cout << "Die kleinste Zahl betrug: " << min << endl;\n  cout << "Die groesste Zahl betrug: " << max << endl;\n\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"7"},"7"),(0,a.kt)("p",null,"  Ein Unternehmen beschlie\xdft f\xfcr seine Mitarbeiter Belegschaftsaktien zu Vorzugskonditionen anzubieten.\nEs werden folgende Konditionen festgesetzt."),(0,a.kt)("p",null,"Mitarbeiter mit einer Betriebszugeh\xf6rigkeit von mehr als 10 Jahren k\xf6nnen 20 Aktien beziehen,\nbei einer Betriebszugeh\xf6rigkeit von mehr als 2 Jahren k\xf6nnen sie 10 Aktien erwerben."),(0,a.kt)("p",null,"Mitarbeiter, die sich in einem gek\xfcndigten Arbeitsverh\xe4ltnis befinden, sollen jedoch keine Aktien erhalten."),(0,a.kt)("p",null,"Eingabe:\nDauer der Betriebszugeh\xf6rigkeit, gek\xfcndigtes Arbeitsverh\xe4ltnis (",(0,a.kt)("inlineCode",{parentName:"p"},"ja")," oder ",(0,a.kt)("inlineCode",{parentName:"p"},"nein"),")"),(0,a.kt)("p",null,"Ausgabe: Anzahl der Aktien, die bezogen werden k\xf6nnen."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  int betriebsZugehoerigkeit = 0;\n  int aktien = 0;\n  char gekuendigt = \' \';\n\n  cout << "Bitte Dauer der Betriebszugehoerigkeit angeben: " << endl;\n  cin >> betriebsZugehoerigkeit;\n\n  do\n  {\n    cout << "Wurde Ihnen gekuendigt (j/n)?" << endl;\n    cin >> gekuendigt;\n    if (gekuendigt != \'j\' && gekuendigt != \'n\')\n    {\n      cout << "Falsche Eingabe! Bitte (j/n) angeben: " << endl;\n    }\n\n  } while (gekuendigt != \'j\' && gekuendigt != \'n\');\n\n  if (gekuendigt == \'j\')\n  {\n    cout << "Da Ihnen gekuendigt wurde erhalten Sie keine Vorzugsaktien" << endl;\n  }\n  else\n  {\n    if (betriebsZugehoerigkeit > 10)\n    {\n      aktien = 20;\n      cout << "Sie koennen " << aktien << " Vorzugsaktien erwerben!" << endl;\n    }\n    else\n    {\n      aktien = 10;\n      cout << "Sie koennen " << aktien << " Vorzugsaktien erwerben!" << endl;\n    }\n  }\n\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"8"},"8"),(0,a.kt)("p",null,"  Nach Eingabe eines Gehalts und eines Kennbuchstabens (",(0,a.kt)("inlineCode",{parentName:"p"},"S"),"tunde, ",(0,a.kt)("inlineCode",{parentName:"p"},"W"),"oche, ",(0,a.kt)("inlineCode",{parentName:"p"},"M"),"onat) wird das entsprechende Jahresgehalt ausgerechnet."),(0,a.kt)("p",null,"Das Jahr hat 52 Wochen, 12 Monate und 2080 Arbeitsstunden/Jahr sind zu leisten."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"alt",src:t(68690).Z,width:"795",height:"280"})),(0,a.kt)("p",null,"alternativ:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"alt",src:t(21464).Z,width:"790",height:"406"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  float gehalt = 0;\n  float jahresGehalt = 0;\n  char kennBuchstabe = ' ';\n\n  do\n  {\n    cout << \"Bitte geben Sie Ihr Gehalt ein: \" << endl;\n    cin >> gehalt;\n  } while (gehalt <= 0);\n\n  do\n  {\n    cout << \"Bitte geben Sie Berechnungzeitraum ein (S)tunden-, (W)ochen- oder (M)onatslohn : \" << endl;\n    cin >> kennBuchstabe;\n  } while (kennBuchstabe != 's' && kennBuchstabe != 'S' && kennBuchstabe != 'w' && kennBuchstabe != 'W' && kennBuchstabe != 'm' && kennBuchstabe != 'M');\n\n  if (kennBuchstabe == 's' || kennBuchstabe == 'S')\n  {\n    jahresGehalt = gehalt * 2080;\n  }\n  else if (kennBuchstabe == 'w' || kennBuchstabe == 'W')\n  {\n    jahresGehalt = gehalt * 52;\n  }\n  else\n  {\n    jahresGehalt = gehalt * 12;\n  }\n\n  cout << \"Ihr Jahresgehalt betraegt: \" << jahresGehalt << endl;\n\n  return 0;\n}\n"))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"9"},"9"),(0,a.kt)("p",null,"  Erstellen Sie ein Programm f\xfcr eine einfache Datumspr\xfcfung. Es werden einzeln Tag, Monat, Jahr eingegeben und sind danach zu pr\xfcfen."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Der Tag muss zwischen 1 und 31 liegen"),(0,a.kt)("li",{parentName:"ul"},"Der Monat dann zwischen 1 und 12 und"),(0,a.kt)("li",{parentName:"ul"},"Jahreszahl sollen nur zwischen 1800 und 2200 erlaubt sein.")),(0,a.kt)("p",null,"Das Programm gibt am Ende aus: ",(0,a.kt)("inlineCode",{parentName:"p"},"Plausibles Datum!")," oder ",(0,a.kt)("inlineCode",{parentName:"p"},"Falsches Datum!")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  int tag = 0;\n  int monat = 0;\n  int jahr = 0;\n\n  cout << "Bitte Tag eingeben" << endl;\n  cin >> tag;\n  cout << "Bitte Monat eingeben" << endl;\n  cin >> monat;\n  cout << "Bitte Jahr eingeben" << endl;\n  cin >> jahr;\n\n  if (tag < 1 || tag > 31 || monat < 1 || monat > 12 || jahr < 1800 || jahr > 2200)\n  {\n    cout << "Falsche Datumeingabe!" << endl;\n  }\n  else\n  {\n    cout << "Plausible Datumeingabe!" << endl;\n  }\n\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"10---check"},"10 - check"),(0,a.kt)("p",null,"  Verfeinern Sie Ihre L\xf6sung: Januar, M\xe4rz, Mai, Juli, August, Oktober, Dezember haben 31 Tage, die anderen Monate mit Ausnahme des Februars haben 30 Tage."),(0,a.kt)("p",null,"-> Sie m\xfcssen also Tag und Monat im Zusammenhang pr\xfcfen\u2026"),(0,a.kt)("p",null,"Das Monatsende des Februars muss nat\xfcrlich im Zusammenhang mit dem Jahr gepr\xfcft werden, gibt es 28 oder 29 Tage?!?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"2020 Schaltjahr"),(0,a.kt)("li",{parentName:"ul"},"1900 kein Schaltjahr")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  int tag = 0;\n  int monat = 0;\n  int jahr = 0;\n\n  cout << "Bitte Tag eingeben" << endl;\n  cin >> tag;\n  cout << "Bitte Monat eingeben" << endl;\n  cin >> monat;\n  cout << "Bitte Jahr eingeben" << endl;\n  cin >> jahr;\n\n  if (tag < 1 || tag > 31 || monat < 1 || monat > 12 || jahr < 1800 || jahr > 2200)\n  {\n\n    cout << "Falsche Datumeingabe!" << endl;\n  }\n  else\n  {\n    cout << "Plausible Datumeingabe!" << endl;\n  }\n  if (monat == 1 || monat == 3 || monat == 5 || monat == 7 || monat == 8 || monat == 10 || monat == 12)\n  {\n    cout << "Dieser Monat hat 31 Tage" << endl;\n    // cout << "Den " << tag << "." << monat << "." << jahr << " gibt es nicht!" << endl;\n  }\n  else if (monat == 2)\n  {\n    if (jahr % 400 == 0 || jahr % 4 == 0 && jahr % 100 != 0)\n    {\n      cout << "Schaltjahr: Dieser Monat hat 29 Tage" << endl;\n      /* code */\n    }\n    else\n    {\n      cout << "Dieser Monat hat 28 Tage" << endl;\n    }\n  }\n  else\n  {\n    cout << "Dieser Monat hat 30 Tage!" << endl;\n  }\n\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"11"},"11"),(0,a.kt)("p",null,"  Es gelte folgende vereinfachte Steuertabelle:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"20% Steuern bei mehr als 10.000\u20ac Einkommen;"),(0,a.kt)("li",{parentName:"ul"},"30% Steuern bei mehr als 25.000\u20ac Einkommen;"),(0,a.kt)("li",{parentName:"ul"},"50% Steuern bei mehr als 50.000\u20ac Einkommen;"),(0,a.kt)("li",{parentName:"ul"},"Geringverdiener zahlen nur 10% Steuern.")),(0,a.kt)("p",null,"Eingegeben wird (nur) das Bruttogehalt.\nErstellen Sie ein Programm zur Ermittlung und Ausgabe der Steuerlast und des Nettogehalts."),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"alt",src:t(52216).Z,width:"781",height:"310"})),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  float bruttoGehalt = 0.0;\n  float steuerLast = 0.0;\n  float nettoGehalt = 0.0;\n\n  cout << "Bitte Bruttogehalt eingeben: " << endl;\n  cin >> bruttoGehalt;\n\n  if (bruttoGehalt > 50000)\n  {\n    nettoGehalt = bruttoGehalt * 0.5;\n  }\n  else if (bruttoGehalt > 25000)\n  {\n    nettoGehalt = bruttoGehalt * 0.7;\n  }\n  else if (bruttoGehalt > 10000)\n  {\n    nettoGehalt = bruttoGehalt * 0.8;\n  }\n  else\n  {\n    nettoGehalt = bruttoGehalt * 0.9;\n  }\n\n  steuerLast = bruttoGehalt - nettoGehalt;\n\n  cout << "Ihr Nettogehalt betraegt: " << nettoGehalt << endl;\n  cout << "Ihre Steuerlast betraegt: " << steuerLast << endl;\n\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"12"},"12"),(0,a.kt)("p",null,"  Verkn\xfcpfen Sie die beiden vorherigen Aufgaben (8) zum \u201eJahres/Stunde/Monatsgehalt\u201c und\ndie Aufgabe (11) zur Steuerberechnung, so dass nach Ermittlung des Jahresgehalts (Brutto)\ndie Steuer und der Nettolohn ermittelt werden."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  float bruttoGehalt = 0;\n  float jahresGehaltBrutto = 0;\n  float jahresGehaltNetto = 0;\n  float steuerLast = 0;\n  char kennBuchstabe = ' ';\n\n  do\n  {\n    cout << \"Bitte geben Sie Ihr Gehalt (brutto) ein: \" << endl;\n    cin >> bruttoGehalt;\n  } while (bruttoGehalt <= 0);\n\n  do\n  {\n    cout << \"Bitte geben Sie Berechnungzeitraum ein (S)tunden-, (W)ochen- oder (M)onatslohn : \" << endl;\n    cin >> kennBuchstabe;\n  } while (kennBuchstabe != 's' && kennBuchstabe != 'S' && kennBuchstabe != 'w' && kennBuchstabe != 'W' && kennBuchstabe != 'm' && kennBuchstabe != 'M');\n\n  if (kennBuchstabe == 's' || kennBuchstabe == 'S')\n  {\n    jahresGehaltBrutto = bruttoGehalt * 2080;\n  }\n  else if (kennBuchstabe == 'w' || kennBuchstabe == 'W')\n  {\n    jahresGehaltBrutto = bruttoGehalt * 52;\n  }\n  else\n  {\n    jahresGehaltBrutto = bruttoGehalt * 12;\n  }\n\n  if (jahresGehaltBrutto > 50000)\n  {\n    jahresGehaltNetto = jahresGehaltBrutto * 0.5;\n  }\n  else if (jahresGehaltBrutto > 25000)\n  {\n    jahresGehaltNetto = jahresGehaltBrutto * 0.7;\n  }\n  else if (jahresGehaltBrutto > 10000)\n  {\n    jahresGehaltNetto = jahresGehaltBrutto * 0.8;\n  }\n  else\n  {\n    jahresGehaltNetto = jahresGehaltBrutto * 0.9;\n  }\n\n  steuerLast = jahresGehaltBrutto - jahresGehaltNetto;\n\n  cout << \"Ihr Jahresgehalt (brutto) betraegt: \" << jahresGehaltBrutto << endl;\n  cout << \"Ihr Jahresgehalt (netto) betraegt: \" << jahresGehaltNetto << endl;\n  cout << \"Ihre jaehrliche Steuerlast betraegt: \" << steuerLast << endl;\n\n  return 0;\n}\n"))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"13"},"13"),(0,a.kt)("p",null,"  In Abh\xe4ngigkeit vom Goldgehalt im Roherz soll die anschlie\xdfende Verarbeitung festgelegt werden."),(0,a.kt)("p",null,"Eingegeben wird der Goldgehalt, das Programm gibt eine Meldung aus, wie mit dem Material zu verfahren ist. Folgende Gehalte und deren Verarbeitung sind zu ber\xfccksichtigen."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"1 g/t gelten als Erz und werden der Aufbereitung zugef\xfchrt;"),(0,a.kt)("li",{parentName:"ul"},"Reicherze mit Gehalten von \xfcber 10g/t werden zum Verschneiden mit Armerzen zwischengelagert;"),(0,a.kt)("li",{parentName:"ul"},"Erze mit Gehalten zwischen 10 und 2 g/t werden direkt in die Aufbereitung transportiert;"),(0,a.kt)("li",{parentName:"ul"},"Armerze (1-2g/t) werden zum Verschneiden mit Reicherzen eingewogen;"),(0,a.kt)("li",{parentName:"ul"},"Gestein mit Gehalten bis 1g/t werden auf die Halde gesch\xfcttet.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  float goldGehalt = 0.0;\n\n  cout << "Bitte Goldgehalt eingeben (gramm/tonne): " << endl;\n  cin >> goldGehalt;\n\n  if (goldGehalt < 1)\n  {\n    cout << "Gestein mit Gehalten bis 1g/t werden auf die Halde geschuettet." << endl;\n  }\n  else if (goldGehalt >= 1 && goldGehalt <= 2)\n  {\n    cout << "Armerze (1-2g/t) werden zum Verschneiden mit Reicherzen eingewogen" << endl;\n  }\n  else if (goldGehalt >= 2 && goldGehalt <= 10)\n  {\n    cout << "Erze mit Gehalten zwischen 2 und 10 g/t werden direkt in die Aufbereitung transportiert" << endl;\n  }\n  else\n  {\n    cout << "Reicherze mit Gehalten von ueber 10g/t werden zum Verschneiden mit Armerzen zwischengelagert" << endl;\n  }\n\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"14"},"14"),(0,a.kt)("p",null,"  Sie haben in Ihrem Au\xdfendienst mehrere Vertreter besch\xe4ftigt und wollen f\xfcr diese Mitarbeiter Provisionen und jeweils das Gesamtgehalt eines Mitarbeiters berechnen."),(0,a.kt)("p",null,"Das Grundgehalt der Vertreter betr\xe4gt 3.000 \u20ac, und es gilt folgende Provisionsregelung im Unternehmen:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Unter 10.000 \u20ac Umsatz bekommt ein Vertreter 3% Provision."),(0,a.kt)("li",{parentName:"ul"},"bei einem Umsatz zwischen 10.000 \u20ac und 20.000 \u20ac gibt es 5% Provision."),(0,a.kt)("li",{parentName:"ul"},"liegt der Umsatz \xfcber 20.000 \u20ac, so bekommt ein Vertreter 7.5% Provision.")),(0,a.kt)("p",null,"F\xfcr jeden Vertreter soll nach Eingabe des Umsatzes das Gehalt berechnet und ausgegeben werden."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#define GRUNDGEHALT 3000\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  float umsatz = 0.0;\n  float gehalt = 0.0;\n\n  cout << "Bitte Umsatz eingeben:" << endl;\n  cin >> umsatz;\n\n  if (umsatz < 10000)\n  {\n    gehalt = GRUNDGEHALT * 1.03;\n  }\n  else if (umsatz >= 10000 && umsatz <= 20000)\n  {\n    gehalt = GRUNDGEHALT * 1.05;\n  }\n  else if (umsatz > 20000)\n  {\n    gehalt = GRUNDGEHALT * 1.075;\n  }\n  cout << "Sie erhalten insgesamt: " << gehalt << endl;\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"15"},"15"),(0,a.kt)("p",null,"  Erweitern Sie die obige Aufgabe (14): Wenn Vertreter in (",(0,a.kt)("inlineCode",{parentName:"p"},"H"),")amburg, (",(0,a.kt)("inlineCode",{parentName:"p"},"B"),")erlin oder (",(0,a.kt)("inlineCode",{parentName:"p"},"M"),")\xfcnchen wohnen, erhalten sie einen Ortszuschlag von 250 \u20ac f\xfcr die erh\xf6hten Lebenshaltungskosten in diesen Gro\xdfst\xe4dten."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <iostream>\n#define GRUNDGEHALT 3000\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  float umsatz = 0.0;\n  float gehalt = 0.0;\n  char ort = ' ';\n\n  cout << \"Bitte Umsatz eingeben:\" << endl;\n  cin >> umsatz;\n\n  cout << \"Bitte Wohnort angeben (H)amburg, (B)erlin oder (M)uenchen:\" << endl;\n  cin >> ort;\n\n  if (umsatz < 10000)\n  {\n    gehalt = GRUNDGEHALT * 1.03;\n  }\n  else if (umsatz >= 10000 && umsatz <= 20000)\n  {\n    gehalt = GRUNDGEHALT * 1.05;\n  }\n  else if (umsatz > 20000)\n  {\n    gehalt = GRUNDGEHALT * 1.075;\n  }\n\n  cout << \"Sie erhalten Gehalt + Provision: \" << gehalt << endl;\n\n  if (ort == 'H' || ort == 'h' || ort == 'b' || ort == 'B' || ort == 'M' || ort == 'M')\n  {\n    gehalt = gehalt + 250;\n    cout << \"Sie erhalten Ortszuschlag: 250\" << endl;\n  }\n\n  cout << \"Sie erhalten insgesamt: \" << gehalt << endl;\n\n  return 0;\n}\n"))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"16"},"16"),(0,a.kt)("p",null,"  Ein Exporteur bietet seinen ausl\xe4ndischen Kunden bei Kauf des Artikels:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Endlosschleifen, rosa, wahlweise links- oder rechtsgedreht"),(0,a.kt)("li",{parentName:"ul"},"Preis pro St\xfcck: 3,98 \u20ac")),(0,a.kt)("p",null,"folgende Rabatte an:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"bei Abnahme von mindestens 100 St\xfcck: 5 % Rabatt"),(0,a.kt)("li",{parentName:"ul"},"mindestens 1.000 St\xfcck: 10 % Rabatt"),(0,a.kt)("li",{parentName:"ul"},"mindestens 5.000 St\xfcck: 15 % Rabatt"),(0,a.kt)("li",{parentName:"ul"},"mindestens 10.000 St\xfcck: 20 % Rabatt")),(0,a.kt)("p",null,"Ein Programm soll nach Eingabe der gekauften Menge folgende Daten berechnen und ausgeben:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Nettopreis gesamt"),(0,a.kt)("li",{parentName:"ul"},"Rabattbetrag"),(0,a.kt)("li",{parentName:"ul"},"Nettobetrag abzgl. Rabatt"),(0,a.kt)("li",{parentName:"ul"},"MwSt (voller Satz)"),(0,a.kt)("li",{parentName:"ul"},"Bruttoendpreis.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  int menge = 0;\n  float einzelPreis = 3.98;\n  float gesamtNetto = 0;\n  int rabatt = 0;\n  float rabattBetrag = 0;\n  float nettoNachRabatt = 0;\n  float mwSt = 0;\n  float bruttoEndPreis = 0;\n\n  cout << "Bitte Menge angeben: " << endl;\n  cin >> menge;\n\n  if (menge >= 10000)\n  {\n    rabatt = 20;\n  }\n  else if (menge >= 5000)\n  {\n    rabatt = 15;\n  }\n  else if (menge >= 1000)\n  {\n    rabatt = 10;\n  }\n  else if (menge >= 100)\n  {\n    rabatt = 5;\n  }\n\n  gesamtNetto = menge * einzelPreis - gesamtNetto;\n  rabattBetrag = menge * (einzelPreis * rabatt / 100);\n  nettoNachRabatt = gesamtNetto - rabattBetrag;\n  mwSt = nettoNachRabatt * 0.19;\n  bruttoEndPreis = nettoNachRabatt + mwSt;\n\n  cout << "Gesamtnetto: " << gesamtNetto << endl;\n  cout << "Rabattbetrag: " << rabattBetrag << endl;\n  cout << "Nettobetrag abzgl. Rabatt: " << nettoNachRabatt << endl;\n  cout << "zzgl. Umsatzsteuer: " << mwSt << endl;\n  cout << "Endpreis brutto : " << bruttoEndPreis << endl;\n\n  return 0;\n}\n'))),(0,a.kt)("br",null),(0,a.kt)(h,{mdxType:"CardChapter"},(0,a.kt)("h2",{id:"17---2do"},"17 - 2Do"),(0,a.kt)("p",null,"  Als Gro\xdfh\xe4ndler bieten wir unseren Kunden verschiedene Rabatte:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Stammkunden erhalten 5 % Treuerabatt, Neukunden nat\xfcrlich noch keinen"),(0,a.kt)("li",{parentName:"ul"},"Gro\xdfh\xe4ndler/Wiederverk\xe4ufer bekommen einen Preisnachlass von 15 %"),(0,a.kt)("li",{parentName:"ul"},"Bei einem Betrag von mehr als 2.500\u20ac erhalten alle 5 % Rabatt extra,"),(0,a.kt)("li",{parentName:"ul"},"bei mehr als 5.000\u20ac sogar 8 %."),(0,a.kt)("li",{parentName:"ul"},"Barzahler erhalten 2% Skonto.")),(0,a.kt)("p",null,"Stammkunden, die auch Gro\xdfh\xe4ndler sind, erhalten also generell"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"mindestens 20 % Rabatt,"),(0,a.kt)("li",{parentName:"ul"},"zus\xe4tzlich einem evtl. Mengenrabatt."),(0,a.kt)("li",{parentName:"ul"},"Endverbraucher als Neukunden bekommen zum Beispiel 10% (8+2) Rabatt, wenn sie f\xfcr mehr 5.000\u20ac einkaufen und bar zahlen.")),(0,a.kt)("p",null,'Es handelt sich hier also um "addierende Rabatte"; ein eventueller Skontobetrag bei Barzahlung wird aber erst NACH Berechnung der Endsumme abgezogen.'),(0,a.kt)("p",null,"Erstellen Sie ein Programm, das alle entsprechenden Informationen (Stammkunde? Gro\xdfh\xe4ndler? Kaufsumme? Barzahler?) abfragt und danach die Summe der erhaltenen Rabatte (in % und \u20ac), den Skontobetrag und nat\xfcrlich den Endpreis anzeigt.")),(0,a.kt)("br",null))}b.isMDXComponent=!0},82043:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/8-6-1-5f1a8e3f12b78b93683c05b5c3ef2f3d.png"},52216:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/8-6-11-cd64627cc8f592d81cd5b0940093ec1c.png"},68690:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/8-6-8_1-e4423f6ec1703ccf9543021fcb56cbf9.png"},21464:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/8-6-8_2-c3e44ae750039fbaa88b18b532e63dba.png"}}]);