"use strict";(self.webpackChunkcodingdocs=self.webpackChunkcodingdocs||[]).push([[6277],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=r.createContext({}),o=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=o(e.components);return r.createElement(c.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,s=u(e,["components","mdxType","originalType","parentName"]),d=o(t),m=i,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||a;return t?r.createElement(f,l(l({ref:n},s),{},{components:t})):r.createElement(f,l({ref:n},s))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=m;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u[d]="string"==typeof e?e:i,l[1]=u;for(var o=2;o<a;o++)l[o]=t[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},62956:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>h,frontMatter:()=>u,metadata:()=>o,toc:()=>d});t(67294);var r=t(3905);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}const u={hide_title:!0,sidebar_position:5,sidebar_label:13.4,tags:["linguae","cpp","c++","cplusplus","aufgaben"]},c=void 0,o={unversionedId:"Aufgaben/13.4",id:"Aufgaben/13.4",title:"13.4",description:"## 1",source:"@site/docs/cpp/Aufgaben/13.4.mdx",sourceDirName:"Aufgaben",slug:"/Aufgaben/13.4",permalink:"/cpp/Aufgaben/13.4",draft:!1,editUrl:"https://p76ers.github.io/docs/cpp/Aufgaben/13.4.mdx",tags:[{label:"linguae",permalink:"/cpp/tags/linguae"},{label:"cpp",permalink:"/cpp/tags/cpp"},{label:"c++",permalink:"/cpp/tags/c"},{label:"cplusplus",permalink:"/cpp/tags/cplusplus"},{label:"aufgaben",permalink:"/cpp/tags/aufgaben"}],version:"current",lastUpdatedAt:1700404453,formattedLastUpdatedAt:"Nov 19, 2023",sidebarPosition:5,frontMatter:{hide_title:!0,sidebar_position:5,sidebar_label:"13.4",tags:["linguae","cpp","c++","cplusplus","aufgaben"]},sidebar:"tutorialSidebar",previous:{title:"13.3",permalink:"/cpp/Aufgaben/13.3"},next:{title:"13.5",permalink:"/cpp/Aufgaben/13.5"}},s={},d=[{value:"1",id:"1",level:2},{value:"2",id:"2",level:2},{value:"3",id:"3",level:2},{value:"4",id:"4",level:2},{value:"5",id:"5",level:2},{value:"6",id:"6",level:2},{value:"7",id:"7",level:2}],p=(m="CardChapter",function(e){return console.warn("Component "+m+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",e)});var m;const f={toc:d},b="wrapper";function h(e){var{components:n}=e,t=l(e,["components"]);return(0,r.kt)(b,a(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){i(e,n,t[n])}))}return e}({},f,t),{components:n,mdxType:"MDXLayout"}),(0,r.kt)(p,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"1"},"1"),(0,r.kt)("p",null,"  F\xfcllen Sie ein Array mit 100 Zufallszahlen (zum Beispiel zwischen 1 und 10.000)."),(0,r.kt)("p",null,"a. Z\xe4hlen Sie, wie viele Zahlen darin durch 6 teilbar sind."),(0,r.kt)("p",null,"Hilfe: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Restrechnung / Modulo: 9 modulo 4 ergibt (Rest) 1"),(0,r.kt)("li",{parentName:"ul"},"10 modulo 4 ergibt (Rest) 2"),(0,r.kt)("li",{parentName:"ul"},"12 modulo 4 ergibt (Rest) 0")),(0,r.kt)("p",null,"b. Ersetzen Sie im Array alle Werte, die durch 5 teilbar sind, durch den Wert 227."),(0,r.kt)("p",null,"c. Wie oft ist die Zahl 23 in diesem Array enthalten?"),(0,r.kt)("p",null,"d. Geben Sie das Array in zehn Zeilen zu je 10 Werten (Spalten) aus."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='1_.cpp'",title:"'1_.cpp'"},'#include <iostream>\n#include <cstdlib>\n#include <ctime>\n\nusing namespace std;\n\nint main()\n{\n  int arr100[100], i, z6 = 0, z23 = 0;\n\n  srand(time(NULL));\n  for (i = 0; i < 100; i++)\n  {\n    arr100[i] = rand() % 100 + 1;\n    cout << arr100[i] << " ";\n  }\n  // wie viele Zahlen durch 6 teilbar\n  for (i = 0; i < 100; i++)\n  {\n    if (arr100[i] % 6 == 0)\n    {\n      z6++;\n    }\n  }\n  cout << "\\n"\n       << z6 << " Zahlen sind durch 6 teilbar.\\n";\n\n  // wenn durch 5 teilbar ersetzen durch 227\n  for (i = 0; i < 100; i++)\n  {\n    if (arr100[i] % 5 == 0)\n    {\n      arr100[i] = 227;\n    }\n  }\n  // wie oft die 23?\n  for (i = 0; i < 100; i++)\n  {\n    if (arr100[i] == 23)\n    {\n      z23++;\n    }\n  }\n  cout << "\\n"\n       << z23 << " mal die 23.\\n";\n\n  for (i = 0; i < 100; i++)\n  {\n    printf("%5i", arr100[i]);\n    if (i % 10 == 9)\n    {\n      cout << "\\n";\n    }\n  }\n\n  return 0;\n}\n')),(0,r.kt)("p",null,"alternativ mit Konstante ",(0,r.kt)("inlineCode",{parentName:"p"},"ANZAHL"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='1.cpp'",title:"'1.cpp'"},'#include <iostream>\n#include <cstdlib>\n#include <ctime>\n// highlight-next-line\n#define ANZAHL 100\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  int arr[ANZAHL] = {0}, teilbar6 = 0, vorhanden23 = 0;\n\n  srand(time(NULL));\n\n  for (int i = 0; i < ANZAHL; i++)\n  {\n    arr[i] = rand() % 10000 + 1;\n    printf("%5i ", arr[i]);\n\n    if (arr[i] % 6 == 0)\n    {\n      teilbar6++;\n    }\n    // b) Ersetzen Sie im Array alle Werte, die durch 5 teilbar sind, durch den Wert 227.\n    if (arr[i] % 5 == 0)\n    {\n      arr[i] = 227;\n    }\n    // cout << arr[i] << endl;\n    // c) Wie oft ist die Zahl 23 in diesem Array enthalten?\n    if (arr[i] == 23)\n    {\n      vorhanden23++;\n    }\n    // d) Geben Sie das Array in zehn Zeilen zu je 10 Werten (Spalten) aus.\n    if (i % 10 == 0 && i != 0)\n    {\n      printf("\\n");\n    }\n  }\n\n  printf("\\nEs sind %i Werte durch 6 teilbar \\n", teilbar6);\n  printf("Die 23 ist %i x vorhanden ", vorhanden23);\n\n  return 0;\n}\n'))),(0,r.kt)("br",null),(0,r.kt)(p,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"2"},"2"),(0,r.kt)("p",null,"  F\xfcllen Sie ein Array ",(0,r.kt)("inlineCode",{parentName:"p"},"arrNoten[50]")," mit beliebigen Klausurnoten (0 - 100 P)\nund geben Sie Sie beste und die schlechteste Note (Standard-Rezept!!!)\nsowie den Durchschnitt der Werte aus, auf eine Kommastelle gerundet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <ctime>\n#define ANZAHL 50\n\nusing namespace std;\n\nint main()\n{\n  int arrNoten[ANZAHL] = {0}, schlechteste = 0, beste = 0;\n  float durchSchnitt = 0.0, summe = 0.0;\n\n  for (int i = 0; i < ANZAHL; i++)\n  {\n    arrNoten[i] = rand() % 101;\n    if (i == 0)\n    {\n      beste = schlechteste = arrNoten[0];\n    }\n    else if (arrNoten[i] < schlechteste)\n    {\n      schlechteste = arrNoten[i];\n    }\n    else if (arrNoten[i] > beste)\n    {\n      beste = arrNoten[i];\n    }\n    cout << arrNoten[i] << endl;\n    summe += arrNoten[i];\n  }\n\n  durchSchnitt = summe / ANZAHL;\n\n  printf("Durchschnittsnote : %.1f\\n", durchSchnitt);\n  printf("Schlechteste Note %i \\n", schlechteste);\n  printf("Beste Note %i \\n", beste);\n\n  return 0;\n}\n'))),(0,r.kt)("br",null),(0,r.kt)(p,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"3"},"3"),(0,r.kt)("p",null,"  Geben Sie alle Noten aus und dazu jeweils den passenden Text ",(0,r.kt)("inlineCode",{parentName:"p"},"Bestanden")," oder ",(0,r.kt)("inlineCode",{parentName:"p"},"Nicht bestanden"),',\nje nach Wert. ("Bestanden" bei mindestens 50%) '),(0,r.kt)("p",null,"Erweiterung:\nGeben Sie zu den Punkten auch jeweils die Note aus, also 1, 2, 3 usw."),(0,r.kt)("p",null,"F\xfcr diese Aufgaben gelten die CBM-/ Handelskammerrichtlinien."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='3.cpp'",title:"'3.cpp'"},'#include <iostream>\n#include <cstdlib>\n#include <ctime>\n\nusing namespace std;\n\nint main()\n{\n  int arrNoten[50], i, z1 = 0, z2 = 0, z3 = 0, z4 = 0, z5 = 0, z6 = 0;\n\n  srand(time(NULL));\n\n  for (i = 0; i < 50; i++)\n  {\n    arrNoten[i] = rand() % 100 + 1;\n    cout << arrNoten[i];\n    if (arrNoten[i] < 50)\n      cout << " Nicht";\n    cout << " bestanden mit ";\n\n    if (arrNoten[i] >= 92)\n    {\n      cout << "1 \\n";\n      z1++;\n    }\n    else if (arrNoten[i] >= 81)\n    {\n      cout << "2 \\n";\n      z2++;\n    }\n    else if (arrNoten[i] >= 67)\n    {\n      cout << "3 \\n";\n      z3++;\n    }\n    else if (arrNoten[i] >= 50)\n    {\n      cout << "4 \\n";\n      z4++;\n    }\n    else if (arrNoten[i] >= 31)\n    {\n      cout << "5 \\n";\n      z5++;\n    }\n    else\n    {\n      cout << "6 \\n";\n      z6++;\n    }\n  }\n  cout << "\\n"\n       << z1 + z2 + z3 + z4 + z5 + z6 << " Ergebenis.";\n  cout << "\\n1: " << z1;\n  cout << "\\n2: " << z2;\n  cout << "\\n3: " << z3;\n  cout << "\\n4: " << z4;\n  cout << "\\n5: " << z5;\n  cout << "\\n6: " << z6;\n  return 0;\n}\n')),(0,r.kt)("p",null,"alternativ mit Noten als Array :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='3_2.cpp'",title:"'3_2.cpp'"},'#include <iostream>\n#include <cstdlib>\n#include <ctime>\n\nusing namespace std;\n\nint main()\n{\n  int arrNoten[20], i;\n  // highlight-next-line\n  z[6];\n\n  srand(time(NULL));\n\n  for (i = 0; i < 20; i++)\n  {\n    arrNoten[i] = rand() % 100 + 1;\n    cout << arrNoten[i] << " ";\n\n    if (arrNoten[i] >= 92)\n    {\n      z[0]++;\n    }\n    else if (arrNoten[i] >= 81)\n    {\n      z[1]++;\n    }\n    else if (arrNoten[i] >= 67)\n    {\n      z[2]++;\n    }\n    else if (arrNoten[i] >= 50)\n    {\n      z[3]++;\n    }\n    else if (arrNoten[i] >= 30)\n    {\n      z[4]++;\n    }\n    else\n    {\n      z[5]++;\n    }\n  }\n\n  for (i = 0; i < 6; i++)\n  {\n    cout << "\\n " << (i + 1) << ": " << z[i] << " mal";\n  }\n  return 0;\n}\n'))),(0,r.kt)("br",null),(0,r.kt)(p,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"4"},"4"),(0,r.kt)("p",null,"Es sollen in ein Array \u201earrZahlen\u201c beliebig viele Zahlen zwischen 1 und 1.000 eingeben werden k\xf6nnen. Ende ist bei Eingabe einer ",(0,r.kt)("inlineCode",{parentName:"p"},"0"),", es d\xfcrfen aber nur maximal 10.000 Zahlen eingegeben werden."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Erstellen Sie ein Teilstruktogramm f\xfcr die Werteingabe. Beachten Sie dabei die Endebedingungen und den G\xfcltigkeitsbereich der Zahlen! Ung\xfcltige Zahlen d\xfcrfen nicht akzeptiert werden."),(0,r.kt)("li",{parentName:"ul"},"Erstellen Sie ein weiteres Teilstruktogramm, das die Anzahl und den Durchschnitt der eingegebenen Werte ermittelt und auf dem Bildschirm ausgibt."),(0,r.kt)("li",{parentName:"ul"},"Erstellen Sie ein drittes Teilstruktogramm, das Minimum und Maximum der eingegebenen Werte ermittelt und auf dem Bildschirm ausgibt."),(0,r.kt)("li",{parentName:"ul"},"Kopieren Sie alle Werte, die um +/- 10 vom Durchschnitt abweichen in ein zweites Array. (Da wir noch keine dynamischen Arrays kennen, w\xe4hlen Sie das Array bitte gleichgro\xdf.)"))),(0,r.kt)("br",null),(0,r.kt)(p,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"5"},"5"),(0,r.kt)("p",null,"Lassen Sie das Programm 1000 x w\xfcrfeln (also Zufallszahlen zwischen 1 und 6 erzeugen) und ermitteln Sie, wie oft jede Zahl gew\xfcrfelt wurde. "),(0,r.kt)("p",null,'oder: Damit Sie baldm\xf6glichst an den Lottojackpot kommen, z\xe4hlen Sie einfach, wie oft jede Zahl zwischen 1 und 49 bei 1.000.000 "Lottoziehungen" vorkommt.'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='5.cpp'",title:"'5.cpp'"},'#include <iostream>\n#define OG 6\n#define UG 1\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  int arr[6] = {0}, wurf = 0;\n\n  srand(time(NULL));\n\n  for (int i = 0; i < 1000; i++)\n  {\n    wurf = rand() % (OG - UG + 1) + UG;\n\n    switch (wurf)\n    {\n    case 1:\n      arr[0]++;\n      break;\n    case 2:\n      arr[1]++;\n      break;\n    case 3:\n      arr[2]++;\n      break;\n    case 4:\n      arr[3]++;\n      break;\n    case 5:\n      arr[4]++;\n      break;\n    case 6:\n      arr[5]++;\n      break;\n    }\n  }\n\n  for (int i = 0; i < 6; i++)\n  {\n    printf("%i wurde %ix gewuerfelt \\n", i + 1, arr[i]);\n  }\n\n  return 0;\n}\n'))),(0,r.kt)("br",null),(0,r.kt)(p,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"6"},"6"),(0,r.kt)("p",null,"Erstellen Sie ein Array mit 20 ganzzahligen Elementen, alle mit 0 vorbelegt. Greifen Sie jetzt in einer While-Schleife per Zufallszahl f\xfcr den Index auf beliebige Elemente zu und tragen Sie dort eine beliebige (zuf\xe4llige) Zahl zwischen 10 und 255 ein. "),(0,r.kt)("p",null,"Aber es darf auf jedes Element nur einmal zugegriffen werden! Wenn also dort schon eine Zahl steht, darf diese nicht \xfcberschrieben werden! Die Schleife muss so oft laufen, bis alle Elemente gef\xfcllt sind; z\xe4hlen Sie dazu die Anzahl der Durchl\xe4ufe."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='6.cpp'",title:"'6.cpp'"},'#include <iostream>\n#include <cstdlib>\n#include <ctime>\n\nusing namespace std;\n\nint main()\n{\n  const int arraySize = 20;\n  int myArray[arraySize] = {0};\n\n  srand((time(NULL)));\n\n  int count = 0;\n\n  while (count < arraySize)\n  {\n    int index = rand() % arraySize;\n\n    if (myArray[index] == 0)\n    {\n      myArray[index] = rand() % 246 + 10;\n      count++;\n    }\n  }\n\n  for (int i = 0; i < arraySize; ++i)\n  {\n    cout << myArray[i] << " ";\n  }\n\n  cout << "\\nAnzahl der Durchlaeufe: " << count << endl;\n\n  return 0;\n}\n'))),(0,r.kt)("br",null),(0,r.kt)(p,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"7"},"7"),(0,r.kt)("p",null,"F\xfcllen Sie ein Array mit 25 Zufallszahlen zwischen 1 und 100."),(0,r.kt)("p",null,"Anschlie\xdfend gibt der Benutzer eine Zahl ein und das Programm gibt aus,\nob die eingegebene Zahl im Array vorhanden ist."),(0,r.kt)("p",null,"Variation 1: Der Benutzer hat 3 Versuche, eine Zahl zu finden, die im Array enthalten ist."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='7.cpp'",title:"'7.cpp'"},'#include <iostream>\n#include <ctime>\n\nusing namespace std;\n\nint main()\n{\n  int arr[25] = {0}, eingabe = 0;\n  bool win = false;\n\n  srand(time(NULL));\n\n  for (int i = 0; i < 25; i++)\n  {\n    arr[i] = rand() % 100 + 1;\n  }\n\n  for (int x = 0; x <= 2; x++)\n  {\n    cout << "Bitte Zahl raten (1-100)" << endl;\n    cin >> eingabe;\n    x++;\n\n    for (int i = 0; i < 25; i++)\n    {\n      if (eingabe == arr[i])\n      {\n        win = true;\n      }\n    }\n  }\n\n  if (win == true)\n  {\n    cout << "Gewonnen!" << endl;\n  }\n  else\n  {\n    cout << "Falsch geraten!" << endl;\n  }\n\n  return 0;\n}\n'))),(0,r.kt)("br",null))}h.isMDXComponent=!0}}]);