"use strict";(self.webpackChunkcodingdocs=self.webpackChunkcodingdocs||[]).push([[5428],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>b});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},h=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(t),h=a,b=u["".concat(p,".").concat(h)]||u[h]||m[h]||l;return t?r.createElement(b,o(o({ref:n},d),{},{components:t})):r.createElement(b,o({ref:n},d))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,o=new Array(l);o[0]=h;var i={};for(var p in n)hasOwnProperty.call(n,p)&&(i[p]=n[p]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}h.displayName="MDXCreateElement"},61880:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>p,default:()=>g,frontMatter:()=>i,metadata:()=>c,toc:()=>u});t(67294);var r=t(3905);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){return n=null!=n?n:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):function(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})),e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}const i={hide_title:!0,sidebar_position:9,sidebar_label:"Mathematische",tags:["linguae","php","PHP","Funktionen","Datentyp","Function","Mathematische"]},p=void 0,c={unversionedId:"Grundbefehle/Funktionen/math",id:"Grundbefehle/Funktionen/math",title:"math",description:"# Mathematische",source:"@site/docs/php/Grundbefehle/Funktionen/math.mdx",sourceDirName:"Grundbefehle/Funktionen",slug:"/Grundbefehle/Funktionen/math",permalink:"/php/Grundbefehle/Funktionen/math",draft:!1,editUrl:"https://p76ers.github.io/docs/php/Grundbefehle/Funktionen/math.mdx",tags:[{label:"linguae",permalink:"/php/tags/linguae"},{label:"php",permalink:"/php/tags/php"},{label:"Funktionen",permalink:"/php/tags/funktionen"},{label:"Datentyp",permalink:"/php/tags/datentyp"},{label:"Function",permalink:"/php/tags/function"},{label:"Mathematische",permalink:"/php/tags/mathematische"}],version:"current",lastUpdatedAt:1702232675,formattedLastUpdatedAt:"Dec 10, 2023",sidebarPosition:9,frontMatter:{hide_title:!0,sidebar_position:9,sidebar_label:"Mathematische",tags:["linguae","php","PHP","Funktionen","Datentyp","Function","Mathematische"]},sidebar:"tutorialSidebar",previous:{title:"Konstanten",permalink:"/php/Grundbefehle/Funktionen/konstanten"},next:{title:"Sessions",permalink:"/php/Grundbefehle/Funktionen/session"}},d={},u=[{value:"<code>round()</code>",id:"round",level:2},{value:"<code>ceil()</code> / <code>floor()</code>",id:"ceil--floor",level:2},{value:"<code>floatval</code> () / <code>doubleval()</code>",id:"floatval---doubleval",level:2},{value:"<code>decbin()</code> / <code>bindec()</code>",id:"decbin--bindec",level:2},{value:"<code>dechex()</code> / <code>hexdec()</code>",id:"dechex--hexdec",level:2},{value:"<code>decoct()</code> / <code>octdec()</code>",id:"decoct--octdec",level:2},{value:"<code>intval()</code>",id:"intval",level:2},{value:"<code>min()</code> <code>max()</code>",id:"min-max",level:2},{value:"number_format()",id:"number_format",level:2},{value:"<code>rand()</code> <code>rand()</code>",id:"rand-rand",level:2}],m=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",n)},h=m("CardHeading"),b=m("CardChapter"),k=m("CardDanger"),s={toc:u},f="wrapper";function g(e){var{components:n}=e,t=o(e,["components"]);return(0,r.kt)(f,l(function(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})))),r.forEach((function(n){a(e,n,t[n])}))}return e}({},s,t),{components:n,mdxType:"MDXLayout"}),(0,r.kt)(h,{mdxType:"CardHeading"},(0,r.kt)("h1",{id:"mathematische"},"Mathematische")),(0,r.kt)("hr",null),(0,r.kt)(b,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"round"},(0,r.kt)("inlineCode",{parentName:"h2"},"round()")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Syntax: ",(0,r.kt)("inlineCode",{parentName:"p"},"round(number,precision,mode);"))),(0,r.kt)("p",null,"Zahlen auf oder abrunden"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Fehlt die ",(0,r.kt)("inlineCode",{parentName:"li"},"precision")," wird auf ganze Zahlen gerundet")),(0,r.kt)("ul",null,(0,r.kt)(k,{mdxType:"CardDanger"},(0,r.kt)("p",null,"  Danger:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"echo (round(0.60));\n\n// -> 1\n"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"echo (round(4.96754, 2));\n\n// -> 4.97\n"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Auf oder abrunden mit ",(0,r.kt)("inlineCode",{parentName:"p"},"mode")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo (round(1.5, 0, PHP_ROUND_HALF_UP) . "<br>");\n// ->  2\necho (round(-1.5, 0, PHP_ROUND_HALF_UP) . "<br>");\n// -> -2\n\necho (round(1.5, 0, PHP_ROUND_HALF_DOWN) . "<br>");\n// ->  1\necho (round(-1.5, 0, PHP_ROUND_HALF_DOWN) . "<br>");\n// -> -1\n\necho (round(1.5, 0, PHP_ROUND_HALF_EVEN) . "<br>");\n// ->  2\necho (round(-1.5, 0, PHP_ROUND_HALF_EVEN) . "<br>");\n// -> -2\n\necho (round(1.5, 0, PHP_ROUND_HALF_ODD) . "<br>");\n// ->  1\necho (round(-1.5, 0, PHP_ROUND_HALF_ODD));\n// -> -1\n'))))),(0,r.kt)("br",null),(0,r.kt)(b,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"ceil--floor"},(0,r.kt)("inlineCode",{parentName:"h2"},"ceil()")," / ",(0,r.kt)("inlineCode",{parentName:"h2"},"floor()")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"abrunden auf ganze Zahlen"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo (floor(0.60) . "<br>");\necho (floor(0.40) . "<br>");\n// -> 0\n'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"aufrunden auf ganze Zahlen"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo (ceil(0.60) . "<br>");\necho (ceil(0.40) . "<br>");\n// -> 1\n'))))),(0,r.kt)("br",null),(0,r.kt)(b,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"floatval---doubleval"},(0,r.kt)("inlineCode",{parentName:"h2"},"floatval")," () / ",(0,r.kt)("inlineCode",{parentName:"h2"},"doubleval()")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'  $a = "12.34";\n  echo floatval($a) . "<br>";\n  // -> 12.34\n\n  $a = "12,34";\n  echo floatval($a) . "<br>";\n  // -> 12\n\n  $b = "12.34Hello";\n  echo floatval($b) . "<br>";\n  // -> 12.34\n\n  $c = "Hello1234.56789";\n  echo floatval($c) . "<br>";\n  // -> 0\n'))),(0,r.kt)("br",null),(0,r.kt)(b,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"decbin--bindec"},(0,r.kt)("inlineCode",{parentName:"h2"},"decbin()")," / ",(0,r.kt)("inlineCode",{parentName:"h2"},"bindec()")),(0,r.kt)(h,{mdxType:"CardHeading"},(0,r.kt)("h2",{id:"dechex--hexdec"},(0,r.kt)("inlineCode",{parentName:"h2"},"dechex()")," / ",(0,r.kt)("inlineCode",{parentName:"h2"},"hexdec()"))),(0,r.kt)(h,{mdxType:"CardHeading"},(0,r.kt)("h2",{id:"decoct--octdec"},(0,r.kt)("inlineCode",{parentName:"h2"},"decoct()")," / ",(0,r.kt)("inlineCode",{parentName:"h2"},"octdec()"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo decbin("3") . "<br>";\n// -> 11\n\necho bindec("11") . "<br>";\n// -> 3\n\necho dechex("15") . "<br>";\n// -> F\n\necho hexdec("f") . "<br>";\n// -> 15\n\necho decoct("10") . "<br>";\n// -> 12\n\necho octdec("12") . "<br>";\n// -> 12\n'))),(0,r.kt)("br",null),(0,r.kt)(b,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"intval"},(0,r.kt)("inlineCode",{parentName:"h2"},"intval()")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Syntax: intval(variable, base);")),(0,r.kt)("p",null,"Variable in Integer konvertieren"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$b = 3.2;\necho intval($b) . "<br>";\n// -> 3\n\n  $b = "1,4";\n  echo intval($b) . "<br>";\n  // -> 1\n\n  $b = "1 paar";\n  echo intval($b, 16) . "<br>";\n  // -> 1\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"base")," gibt an zu welcher Basis (default dezimal)"))),(0,r.kt)("br",null),(0,r.kt)(b,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"min-max"},(0,r.kt)("inlineCode",{parentName:"h2"},"min()")," ",(0,r.kt)("inlineCode",{parentName:"h2"},"max()")),(0,r.kt)("p",null,"Minimum und Maximum bestimmen"),(0,r.kt)(k,{mdxType:"CardDanger"},(0,r.kt)("p",null,"Danger:"),(0,r.kt)("p",null,"Mindestens 2 Parameter m\xfcssen \xfcbergeben werden"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'  echo min(44, 16, 81, 12). "<br>";\n  // -> 12\n  echo max(44, 16, 81, 12);\n  // -> 81\n')))),(0,r.kt)("br",null),(0,r.kt)(b,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"number_format"},"number_format()"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Syntax: ",(0,r.kt)("inlineCode",{parentName:"p"},"number_format(number,decimals,decimalpoint,separator)")," ")),(0,r.kt)(k,{mdxType:"CardDanger"},(0,r.kt)("p",null,"Danger:"),(0,r.kt)("p",null,"Akzeptiert ein, zwei oder vier Parameter (nicht drei)!!")),(0,r.kt)("p",null,"Ausgabe von Zahlen formatieren"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Default: Anzeige englische Tausender und Nachkommastellen",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo number_format("1000000") . "<br>";\n// -> 1,000,000\n'))),(0,r.kt)("li",{parentName:"ul"},"Anzahl der Nachkommastellen bestimmen",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},'  echo number_format("1000000", 2) . "<br>";\n  // -> 1,000,000.00\n'))),(0,r.kt)("li",{parentName:"ul"},"Deutsches Format Tausender- und Nachkommatrenner",(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo number_format("1000000", 2, ",", ".");\n// -> 1.000.000,00\n'))))),(0,r.kt)("br",null),(0,r.kt)(b,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"rand-rand"},(0,r.kt)("inlineCode",{parentName:"h2"},"rand()")," ",(0,r.kt)("inlineCode",{parentName:"h2"},"rand()")),(0,r.kt)("p",null,"erzeugt Zufallszahl"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"eine beliebige "),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"echo rand();\n\n// z.B. -> 1698367382\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"innerhalb Werten von 10-100"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"echo(rand(10,100));\n"))))),(0,r.kt)("br",null))}g.isMDXComponent=!0}}]);