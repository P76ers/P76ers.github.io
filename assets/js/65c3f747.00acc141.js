"use strict";(self.webpackChunkcodingdocs=self.webpackChunkcodingdocs||[]).push([[8727],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var r=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var i=r.createContext({}),u=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,l=e.mdxType,a=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),d=u(n),m=l,k=d["".concat(i,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(k,o(o({ref:t},s),{},{components:n})):r.createElement(k,o({ref:t},s))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var a=n.length,o=new Array(a);o[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[d]="string"==typeof e?e:l,o[1]=p;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},75542:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>p,metadata:()=>u,toc:()=>d});n(67294);var r=n(3905);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})),e}function o(e,t){if(null==e)return{};var n,r,l=function(e,t){if(null==e)return{};var n,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}const p={hide_title:!0,sidebar_position:11,sidebar_label:"String",tags:["linguae","php","PHP","Funktionen","Datentyp","Function","String"]},i=void 0,u={unversionedId:"Grundbefehle/Funktionen/string",id:"Grundbefehle/Funktionen/string",title:"string",description:"# String",source:"@site/docs/php/Grundbefehle/Funktionen/string.mdx",sourceDirName:"Grundbefehle/Funktionen",slug:"/Grundbefehle/Funktionen/string",permalink:"/php/Grundbefehle/Funktionen/string",draft:!1,editUrl:"https://p76ers.github.io/docs/php/Grundbefehle/Funktionen/string.mdx",tags:[{label:"linguae",permalink:"/php/tags/linguae"},{label:"php",permalink:"/php/tags/php"},{label:"Funktionen",permalink:"/php/tags/funktionen"},{label:"Datentyp",permalink:"/php/tags/datentyp"},{label:"Function",permalink:"/php/tags/function"},{label:"String",permalink:"/php/tags/string"}],version:"current",lastUpdatedAt:1702232675,formattedLastUpdatedAt:"Dec 10, 2023",sidebarPosition:11,frontMatter:{hide_title:!0,sidebar_position:11,sidebar_label:"String",tags:["linguae","php","PHP","Funktionen","Datentyp","Function","String"]},sidebar:"tutorialSidebar",previous:{title:"Sessions",permalink:"/php/Grundbefehle/Funktionen/session"},next:{title:"Variablen",permalink:"/php/Grundbefehle/Funktionen/variablen"}},s={},d=[{value:"Array",id:"array",level:2},{value:"<code>explode()</code>",id:"explode",level:3},{value:"<code>str_split()</code>",id:"str_split",level:3},{value:"ASCII",id:"ascii",level:2},{value:"<code>chr()</code>",id:"chr",level:3},{value:"<code>ord()</code>",id:"ord",level:3},{value:"<code>strlen()</code>",id:"strlen",level:2},{value:"<code>str_replace()</code>",id:"str_replace",level:2},{value:"<code>strrev()</code>",id:"strrev",level:2},{value:"<code>str_shuffle()</code>",id:"str_shuffle",level:2},{value:"<code>strtolower()</code> / <code>strtoupper()</code>",id:"strtolower--strtoupper",level:2},{value:"<code>substr()</code>",id:"substr",level:2},{value:"<code>trim()</code>",id:"trim",level:2},{value:"<code>ucfirst()</code>",id:"ucfirst",level:2}],c=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",t)},m=c("CardHeading"),k=c("CardChapter"),h=c("CardDanger"),g=c("CardInfo"),b={toc:d},f="wrapper";function y(e){var{components:t}=e,n=o(e,["components"]);return(0,r.kt)(f,a(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable})))),r.forEach((function(t){l(e,t,n[t])}))}return e}({},b,n),{components:t,mdxType:"MDXLayout"}),(0,r.kt)(m,{mdxType:"CardHeading"},(0,r.kt)("h1",{id:"string"},"String")),(0,r.kt)("hr",null),(0,r.kt)(m,{mdxType:"CardHeading"},(0,r.kt)("h2",{id:"array"},"Array")),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h3",{id:"explode"},(0,r.kt)("inlineCode",{parentName:"h3"},"explode()")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Syntax: ",(0,r.kt)("inlineCode",{parentName:"p"},"explode(separator,string,limit)"))),(0,r.kt)("p",null,"Konvertiert ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," zu ",(0,r.kt)("inlineCode",{parentName:"p"},"array")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"separator")," als trennzeichen zwischen den Elementen angeben"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"$str = \"Hello World.\";\nprint_r(explode(\" \", $str));\n// -> Array ( [0] => Hello [1] => World. )\n\n$num = 'one,two,three';\n\nprint_r(explode(',', $num));\n  // -> Array ( [0] => one [1] => two [2] => three )\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Anzahl der Elemente begrenzen mit ",(0,r.kt)("inlineCode",{parentName:"p"},"limit")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"print_r(explode(',', $str, 0));\nprint \"<br>\";\n// -> Array ( [0] => one,two,three,four )\n\nprint_r(explode(',', $str, 2));\nprint \"<br>\";\n// -> Array ( [0] => one [1] => two,three,four )\n\nprint_r(explode(',', $str, -1));\n// -> Array ( [0] => one [1] => two [2] => three )\n"))))),(0,r.kt)("br",null),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h3",{id:"str_split"},(0,r.kt)("inlineCode",{parentName:"h3"},"str_split()")),(0,r.kt)("p",null,"string in chars zerlegen und in ein array umwandeln"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'print_r(str_split("Hello"));\n// -> Array ( [0] => H [1] => e [2] => l [3] => l [4] => o )\n'))),(0,r.kt)("br",null),(0,r.kt)(m,{mdxType:"CardHeading"},(0,r.kt)("h2",{id:"ascii"},"ASCII")),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h3",{id:"chr"},(0,r.kt)("inlineCode",{parentName:"h3"},"chr()")),(0,r.kt)("p",null,"ASCII zu Zeichen"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"echo chr(66);\n// -> B\n"))),(0,r.kt)("br",null),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h3",{id:"ord"},(0,r.kt)("inlineCode",{parentName:"h3"},"ord()")),(0,r.kt)("p",null,"Zeichen zu ASCII"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo ord("A");\n// -> 65\n'))),(0,r.kt)("br",null),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"strlen"},(0,r.kt)("inlineCode",{parentName:"h2"},"strlen()")),(0,r.kt)("p",null,"Zeichenl\xe4nge eines ",(0,r.kt)("inlineCode",{parentName:"p"},"String")," bestimmen"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo strlen("Hello");\n// -> 5\n'))),(0,r.kt)("br",null),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"str_replace"},(0,r.kt)("inlineCode",{parentName:"h2"},"str_replace()")),(0,r.kt)("p",null,"Alle Wort / Zeichen in einem ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," ersetzen"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo str_replace("world", "Peter", "Hello world!") . "<br>";\n// -> Hello Peter!\n\necho str_replace("o", "\ud83d\udca9", "Hello world!");\n// -> Hell\ud83d\udca9 w\ud83d\udca9rld!\n'))),(0,r.kt)("br",null),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"strrev"},(0,r.kt)("inlineCode",{parentName:"h2"},"strrev()")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"string")," r\xfcckw\xe4rts ausgeben"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo strrev("!dlroW olleH");\n// ->  Hello World!\n'))),(0,r.kt)("br",null),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"str_shuffle"},(0,r.kt)("inlineCode",{parentName:"h2"},"str_shuffle()")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"chars")," im ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," zuf\xe4llig mischen"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo str_shuffle("Hello World");\n// z.B. -> l lrloHWode\n'))),(0,r.kt)("br",null),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"strtolower--strtoupper"},(0,r.kt)("inlineCode",{parentName:"h2"},"strtolower()")," / ",(0,r.kt)("inlineCode",{parentName:"h2"},"strtoupper()")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"String")," in Klein- / Gro\xdfbuchstaben umwandeln"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'  echo strtolower("HELLO WORLD");\n  // -> hello world!\n  echo strtoupper("hello world!");\n  // -> HELLO WORLD!\n')),(0,r.kt)(h,{mdxType:"CardDanger"},(0,r.kt)("p",null,"Danger:"),(0,r.kt)("p",null,"Umlaute funktionieren nicht!")),(0,r.kt)(g,{mdxType:"CardInfo"},(0,r.kt)("p",null,"Info:"),(0,r.kt)("p",null,"funzt..."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"toUpper"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"function strtoupper_utf8($str)\n{\n  $from = array('\xe4', '\xf6', '\xfc');\n  $to = array('\xc4', '\xd6', '\xdc');\n\n  return strtoupper(str_replace($from, $to, $str));\n}\n\n$str = '\xe4\xf6\xfc';\n\necho strtoupper_utf8($str);\n// Ausgabe \xc4\xd6\xdc\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"toLower"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},"function strtolower_utf8($str)\n{\n  $from = array('\xc4', '\xd6', '\xdc');\n  $to = array('\xe4', '\xf6', '\xfc');\n\n  return strtoupper(str_replace($from, $to, $str));\n}\n\n$str = '\xc4\xd6\xdc';\n\necho strtolower_utf8($str);\n// Ausgabe \xe4\xf6\xfc\n")))))),(0,r.kt)("br",null),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"substr"},(0,r.kt)("inlineCode",{parentName:"h2"},"substr()")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Syntax: ",(0,r.kt)("inlineCode",{parentName:"p"},"substr(string,start,length)"))),(0,r.kt)("p",null,"Teile eines string ausschneiden"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"nur mit ",(0,r.kt)("inlineCode",{parentName:"li"},"start"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo substr("Hello world", 6) . "<br>";\n// -> world\necho substr("Hello world", -3) . "<br>";\n// -> rld\n'))),(0,r.kt)("li",{parentName:"ul"},"mit ",(0,r.kt)("inlineCode",{parentName:"li"},"start")," und ",(0,r.kt)("inlineCode",{parentName:"li"},"lenght"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo substr("Hello world", 3, 5) . "<br>";\n// -> lo wo\necho substr("Hello world", -10, -2) . "<br>";\n// -> ello wor\n'))))),(0,r.kt)("br",null),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"trim"},(0,r.kt)("inlineCode",{parentName:"h2"},"trim()")),(0,r.kt)("p",null,"Zeichen am Anfang und Ende (keine mittigen) entfernen"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$str = "_._Hello World!_._";\n\necho trim($str, "_._");\n// -> Hello World!\n'))),(0,r.kt)("br",null),(0,r.kt)(k,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"ucfirst"},(0,r.kt)("inlineCode",{parentName:"h2"},"ucfirst()")),(0,r.kt)("p",null,"Ersten Buchstaben eines ",(0,r.kt)("inlineCode",{parentName:"p"},"string")," gro\xdf schreiben"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'echo ucfirst("hello world!");\n// -> Hello world!\n')),(0,r.kt)(h,{mdxType:"CardDanger"},(0,r.kt)("p",null,"Danger:"),(0,r.kt)("p",null,"Funktioniert nicht bei Sonderzeichen wie Umlauten, abh\xe4ngig von ")),(0,r.kt)(g,{mdxType:"CardInfo"},(0,r.kt)("p",null,"Info:"),(0,r.kt)("p",null,"funzt.."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'$str = "\xe4hre";\n\nfunction myucfirst($str)\n{\n  $fc = mb_strtoupper(mb_substr($str, 0, 1));\n  return $fc . mb_substr($str, 1);\n}\n\n// -> \xc4hre\n')))),(0,r.kt)("br",null))}y.isMDXComponent=!0}}]);