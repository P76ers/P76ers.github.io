"use strict";(self.webpackChunkcodingdocs=self.webpackChunkcodingdocs||[]).push([[1054],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>m});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(r),b=a,m=u["".concat(l,".").concat(b)]||u[b]||d[b]||o;return r?n.createElement(m,i(i({ref:t},s),{},{components:r})):n.createElement(m,i({ref:t},s))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=b;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},44986:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>O,frontMatter:()=>p,metadata:()=>c,toc:()=>u});r(67294);var n=r(3905);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))})),e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}const p={hide_title:!0,sidebar_position:3,sidebar_label:"Operators",tags:["linguae","cpp","c++","cplusplus","basics","operators","operatoren"]},l=void 0,c={unversionedId:"basics/operators",id:"basics/operators",title:"operators",description:"# Operators",source:"@site/docs/cpp/basics/operators.mdx",sourceDirName:"basics",slug:"/basics/operators",permalink:"/cpp/basics/operators",draft:!1,editUrl:"https://p76ers.github.io/docs/cpp/basics/operators.mdx",tags:[{label:"linguae",permalink:"/cpp/tags/linguae"},{label:"cpp",permalink:"/cpp/tags/cpp"},{label:"c++",permalink:"/cpp/tags/c"},{label:"cplusplus",permalink:"/cpp/tags/cplusplus"},{label:"basics",permalink:"/cpp/tags/basics"},{label:"operators",permalink:"/cpp/tags/operators"},{label:"operatoren",permalink:"/cpp/tags/operatoren"}],version:"current",lastUpdatedAt:1699628022,formattedLastUpdatedAt:"Nov 10, 2023",sidebarPosition:3,frontMatter:{hide_title:!0,sidebar_position:3,sidebar_label:"Operators",tags:["linguae","cpp","c++","cplusplus","basics","operators","operatoren"]},sidebar:"tutorialSidebar",previous:{title:"Variables",permalink:"/cpp/basics/variables"},next:{title:"Datatypes",permalink:"/cpp/datatypes/"}},s={},u=[{value:"General",id:"general",level:2},{value:"Arithmetic",id:"arithmetic",level:2},{value:"Assignment",id:"assignment",level:2}],d=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},b=d("CardHeading"),m=d("CardChapter"),f=d("CardInfo"),y={toc:u},g="wrapper";function O(e){var{components:t}=e,r=i(e,["components"]);return(0,n.kt)(g,o(function(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{},n=Object.keys(r);"function"==typeof Object.getOwnPropertySymbols&&(n=n.concat(Object.getOwnPropertySymbols(r).filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable})))),n.forEach((function(t){a(e,t,r[t])}))}return e}({},y,r),{components:t,mdxType:"MDXLayout"}),(0,n.kt)(b,{mdxType:"CardHeading"},(0,n.kt)("h1",{id:"operators"},"Operators")),(0,n.kt)("hr",null),(0,n.kt)("br",null),(0,n.kt)(m,{mdxType:"CardChapter"},(0,n.kt)("h2",{id:"general"},"General"),(0,n.kt)(f,{mdxType:"CardInfo"},(0,n.kt)("p",null,"Info:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"put spaces around operators")))),(0,n.kt)("br",null),(0,n.kt)(m,{mdxType:"CardChapter"},(0,n.kt)("h2",{id:"arithmetic"},"Arithmetic"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Operator Precedence",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"*")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"/")," have higher precedence than ",(0,n.kt)("inlineCode",{parentName:"li"},"+")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"-"),"."),(0,n.kt)("li",{parentName:"ul"},"parentheses are computed first ",(0,n.kt)("inlineCode",{parentName:"li"},"()")),(0,n.kt)("li",{parentName:"ul"},"same precedence is computed from left to right"))))),(0,n.kt)("br",null),(0,n.kt)(m,{mdxType:"CardChapter"},(0,n.kt)("h2",{id:"assignment"},"Assignment"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"=")," is an assignment operator"))),(0,n.kt)("br",null))}O.isMDXComponent=!0}}]);