"use strict";(self.webpackChunkcodingdocs=self.webpackChunkcodingdocs||[]).push([[6277],{3905:(n,e,t)=>{t.d(e,{Zo:()=>s,kt:()=>m});var r=t(67294);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){i(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}var c=r.createContext({}),u=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},s=function(n){var e=u(n.components);return r.createElement(c.Provider,{value:e},n.children)},p="mdxType",d={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(n,e){var t=n.components,i=n.mdxType,a=n.originalType,c=n.parentName,s=o(n,["components","mdxType","originalType","parentName"]),p=u(t),f=i,m=p["".concat(c,".").concat(f)]||p[f]||d[f]||a;return t?r.createElement(m,l(l({ref:e},s),{},{components:t})):r.createElement(m,l({ref:e},s))}));function m(n,e){var t=arguments,i=e&&e.mdxType;if("string"==typeof n||i){var a=t.length,l=new Array(a);l[0]=f;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=n,o[p]="string"==typeof n?n:i,l[1]=o;for(var u=2;u<a;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},62956:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>c,default:()=>g,frontMatter:()=>o,metadata:()=>u,toc:()=>p});t(67294);var r=t(3905);function i(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){return e=null!=e?e:{},Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):function(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))})),n}function l(n,e){if(null==n)return{};var t,r,i=function(n,e){if(null==n)return{};var t,r,i={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(i[t]=n[t]);return i}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(i[t]=n[t])}return i}const o={hide_title:!0,sidebar_position:5,sidebar_label:13.4,tags:["linguae","cpp","c++","cplusplus","aufgaben"]},c=void 0,u={unversionedId:"Aufgaben/13.4",id:"Aufgaben/13.4",title:"13.4",description:"## 1",source:"@site/docs/cpp/Aufgaben/13.4.mdx",sourceDirName:"Aufgaben",slug:"/Aufgaben/13.4",permalink:"/cpp/Aufgaben/13.4",draft:!1,editUrl:"https://p76ers.github.io/docs/cpp/Aufgaben/13.4.mdx",tags:[{label:"linguae",permalink:"/cpp/tags/linguae"},{label:"cpp",permalink:"/cpp/tags/cpp"},{label:"c++",permalink:"/cpp/tags/c"},{label:"cplusplus",permalink:"/cpp/tags/cplusplus"},{label:"aufgaben",permalink:"/cpp/tags/aufgaben"}],version:"current",lastUpdatedAt:1699726522,formattedLastUpdatedAt:"Nov 11, 2023",sidebarPosition:5,frontMatter:{hide_title:!0,sidebar_position:5,sidebar_label:"13.4",tags:["linguae","cpp","c++","cplusplus","aufgaben"]},sidebar:"tutorialSidebar",previous:{title:"13.3",permalink:"/cpp/Aufgaben/13.3"},next:{title:"Vorlesung",permalink:"/cpp/Aufgaben/vorlesung"}},s={},p=[{value:"1",id:"1",level:2},{value:"2",id:"2",level:2},{value:"3",id:"3",level:2}],d=(f="CardChapter",function(n){return console.warn("Component "+f+" was not imported, exported, or provided by MDXProvider as global scope"),(0,r.kt)("div",n)});var f;const m={toc:p},b="wrapper";function g(n){var{components:e}=n,t=l(n,["components"]);return(0,r.kt)(b,a(function(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{},r=Object.keys(t);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(t).filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable})))),r.forEach((function(e){i(n,e,t[e])}))}return n}({},m,t),{components:e,mdxType:"MDXLayout"}),(0,r.kt)(d,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"1"},"1"),(0,r.kt)("p",null,"  F\xfcllen Sie ein Array mit 100 Zufallszahlen (zum Beispiel zwischen 1 und 10.000)."),(0,r.kt)("p",null,"a. Z\xe4hlen Sie, wie viele Zahlen darin durch 6 teilbar sind."),(0,r.kt)("p",null,"Hilfe: "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Restrechnung / Modulo: 9 modulo 4 ergibt (Rest) 1"),(0,r.kt)("li",{parentName:"ul"},"10 modulo 4 ergibt (Rest) 2"),(0,r.kt)("li",{parentName:"ul"},"12 modulo 4 ergibt (Rest) 0")),(0,r.kt)("p",null,"b. Ersetzen Sie im Array alle Werte, die durch 5 teilbar sind, durch den Wert 227."),(0,r.kt)("p",null,"c. Wie oft ist die Zahl 23 in diesem Array enthalten?"),(0,r.kt)("p",null,"d. Geben Sie das Array in zehn Zeilen zu je 10 Werten (Spalten) aus."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='1_.cpp'",title:"'1_.cpp'"},'#include <iostream>\n#include <cstdlib>\n#include <ctime>\n\nusing namespace std;\n\nint main()\n{\n  int arr100[100], i, z6 = 0, z23 = 0;\n\n  srand(time(NULL));\n  for (i = 0; i < 100; i++)\n  {\n    arr100[i] = rand() % 100 + 1;\n    cout << arr100[i] << " ";\n  }\n  // wie viele Zahlen durch 6 teilbar\n  for (i = 0; i < 100; i++)\n  {\n    if (arr100[i] % 6 == 0)\n    {\n      z6++;\n    }\n  }\n  cout << "\\n"\n       << z6 << " Zahlen sind durch 6 teilbar.\\n";\n\n  // wenn durch 5 teilbar ersetzen durch 227\n  for (i = 0; i < 100; i++)\n  {\n    if (arr100[i] % 5 == 0)\n    {\n      arr100[i] = 227;\n    }\n  }\n  // wie oft die 23?\n  for (i = 0; i < 100; i++)\n  {\n    if (arr100[i] == 23)\n    {\n      z23++;\n    }\n  }\n  cout << "\\n"\n       << z23 << " mal die 23.\\n";\n\n  for (i = 0; i < 100; i++)\n  {\n    printf("%5i", arr100[i]);\n    if (i % 10 == 9)\n    {\n      cout << "\\n";\n    }\n  }\n\n  return 0;\n}\n')),(0,r.kt)("p",null,"alternativ mit Konstante ",(0,r.kt)("inlineCode",{parentName:"p"},"ANZAHL"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='1.cpp'",title:"'1.cpp'"},'#include <iostream>\n#include <cstdlib>\n#include <ctime>\n// highlight-next-line\n#define ANZAHL 100\n\nusing namespace std;\n\nint main(int argc, char const *argv[])\n{\n  int arr[ANZAHL] = {0}, teilbar6 = 0, vorhanden23 = 0;\n\n  srand(time(NULL));\n\n  for (int i = 0; i < ANZAHL; i++)\n  {\n    arr[i] = rand() % 10000 + 1;\n    printf("%5i ", arr[i]);\n\n    if (arr[i] % 6 == 0)\n    {\n      teilbar6++;\n    }\n    // b) Ersetzen Sie im Array alle Werte, die durch 5 teilbar sind, durch den Wert 227.\n    if (arr[i] % 5 == 0)\n    {\n      arr[i] = 227;\n    }\n    // cout << arr[i] << endl;\n    // c) Wie oft ist die Zahl 23 in diesem Array enthalten?\n    if (arr[i] == 23)\n    {\n      vorhanden23++;\n    }\n    // d) Geben Sie das Array in zehn Zeilen zu je 10 Werten (Spalten) aus.\n    if (i % 10 == 0 && i != 0)\n    {\n      printf("\\n");\n    }\n  }\n\n  printf("\\nEs sind %i Werte durch 6 teilbar \\n", teilbar6);\n  printf("Die 23 ist %i x vorhanden ", vorhanden23);\n\n  return 0;\n}\n'))),(0,r.kt)("br",null),(0,r.kt)(d,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"2"},"2"),(0,r.kt)("p",null,"  F\xfcllen Sie ein Array ",(0,r.kt)("inlineCode",{parentName:"p"},"arrNoten[50]")," mit beliebigen Klausurnoten (0 - 100 P)\nund geben Sie Sie beste und die schlechteste Note (Standard-Rezept!!!)\nsowie den Durchschnitt der Werte aus, auf eine Kommastelle gerundet."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'#include <iostream>\n#include <ctime>\n#define ANZAHL 50\n\nusing namespace std;\n\nint main()\n{\n  int arrNoten[ANZAHL] = {0}, schlechteste = 0, beste = 0;\n  float durchSchnitt = 0.0, summe = 0.0;\n\n  for (int i = 0; i < ANZAHL; i++)\n  {\n    arrNoten[i] = rand() % 101;\n    if (i == 0)\n    {\n      beste = schlechteste = arrNoten[0];\n    }\n    else if (arrNoten[i] < schlechteste)\n    {\n      schlechteste = arrNoten[i];\n    }\n    else if (arrNoten[i] > beste)\n    {\n      beste = arrNoten[i];\n    }\n    cout << arrNoten[i] << endl;\n    summe += arrNoten[i];\n  }\n\n  durchSchnitt = summe / ANZAHL;\n\n  printf("Durchschnittsnote : %.1f\\n", durchSchnitt);\n  printf("Schlechteste Note %i \\n", schlechteste);\n  printf("Beste Note %i \\n", beste);\n\n  return 0;\n}\n'))),(0,r.kt)("br",null),(0,r.kt)(d,{mdxType:"CardChapter"},(0,r.kt)("h2",{id:"3"},"3"),(0,r.kt)("p",null,"  Geben Sie alle Noten aus und dazu jeweils den passenden Text ",(0,r.kt)("inlineCode",{parentName:"p"},"Bestanden")," oder ",(0,r.kt)("inlineCode",{parentName:"p"},"Nicht bestanden"),',\nje nach Wert. ("Bestanden" bei mindestens 50%) '),(0,r.kt)("p",null,"Erweiterung:\nGeben Sie zu den Punkten auch jeweils die Note aus, also 1, 2, 3 usw."),(0,r.kt)("p",null,"F\xfcr diese Aufgaben gelten die CBM-/ Handelskammerrichtlinien."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='3.cpp'",title:"'3.cpp'"},'#include <iostream>\n#include <cstdlib>\n#include <ctime>\n\nusing namespace std;\n\nint main()\n{\n  int arrNoten[50], i, z1 = 0, z2 = 0, z3 = 0, z4 = 0, z5 = 0, z6 = 0;\n\n  srand(time(NULL));\n\n  for (i = 0; i < 50; i++)\n  {\n    arrNoten[i] = rand() % 100 + 1;\n    cout << arrNoten[i];\n    if (arrNoten[i] < 50)\n      cout << " Nicht";\n    cout << " bestanden mit ";\n\n    if (arrNoten[i] >= 92)\n    {\n      cout << "1 \\n";\n      z1++;\n    }\n    else if (arrNoten[i] >= 81)\n    {\n      cout << "2 \\n";\n      z2++;\n    }\n    else if (arrNoten[i] >= 67)\n    {\n      cout << "3 \\n";\n      z3++;\n    }\n    else if (arrNoten[i] >= 50)\n    {\n      cout << "4 \\n";\n      z4++;\n    }\n    else if (arrNoten[i] >= 31)\n    {\n      cout << "5 \\n";\n      z5++;\n    }\n    else\n    {\n      cout << "6 \\n";\n      z6++;\n    }\n  }\n  cout << "\\n"\n       << z1 + z2 + z3 + z4 + z5 + z6 << " Ergebenis.";\n  cout << "\\n1: " << z1;\n  cout << "\\n2: " << z2;\n  cout << "\\n3: " << z3;\n  cout << "\\n4: " << z4;\n  cout << "\\n5: " << z5;\n  cout << "\\n6: " << z6;\n  return 0;\n}\n')),(0,r.kt)("p",null,"alternativ mit Noten als Array :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"title='3_2.cpp'",title:"'3_2.cpp'"},'#include <iostream>\n#include <cstdlib>\n#include <ctime>\n\nusing namespace std;\n\nint main()\n{\n  int arrNoten[20], i;\n  // highlight-next-line\n  z[6];\n\n  srand(time(NULL));\n\n  for (i = 0; i < 20; i++)\n  {\n    arrNoten[i] = rand() % 100 + 1;\n    cout << arrNoten[i] << " ";\n\n    if (arrNoten[i] >= 92)\n    {\n      z[0]++;\n    }\n    else if (arrNoten[i] >= 81)\n    {\n      z[1]++;\n    }\n    else if (arrNoten[i] >= 67)\n    {\n      z[2]++;\n    }\n    else if (arrNoten[i] >= 50)\n    {\n      z[3]++;\n    }\n    else if (arrNoten[i] >= 30)\n    {\n      z[4]++;\n    }\n    else\n    {\n      z[5]++;\n    }\n  }\n\n  for (i = 0; i < 6; i++)\n  {\n    cout << "\\n " << (i + 1) << ": " << z[i] << " mal";\n  }\n  return 0;\n}\n'))),(0,r.kt)("br",null))}g.isMDXComponent=!0}}]);